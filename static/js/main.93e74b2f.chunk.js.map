{"version":3,"sources":["requestBuilder.js","assets/logo_transparent.png","App.js","reportWebVitals.js","common.js","formComponents.js","submitOrderForm.js","submitOrderPage.js","orderSubmittedPage.js","index.js"],"names":["exports","createRequestOptions","reqType","method","headers","body","JSON","stringify","title","App","className","to","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","generateTodayDate","year","Date","getFullYear","toString","month","getMonth","getDate","generateNextInvoiceNumber","lastInvoiceNumber","substring","index","parseInt","currYear","currMonth","length","generateCode","category","brand","detailed","color","desc","apiEndpoint","appleDetailedList","appleCategoryList","samsungDetailedList","samsungCategoryList","naDetailedList","naCategoryList","defaultColorList","defaultDescList","radioSelection","selectionName","options","callback","map","option","htmlId","type","name","id","onClick","htmlFor","SubmitOrderForm","useState","customerName","setCustomerName","setCategory","setBrand","setDetailed","setColor","setDesc","qty","setQty","discount","setDiscount","status","setStatus","remarks","setRemarks","tips","setTips","submitting","setSubmitting","shouldRedirect","setShouldRedirect","detailedList","setDetailedList","categoryList","setCategoryList","colorList","setColorList","descList","setDescList","warningMessage","setWarningMessage","isWarningMessageVisible","setWarningMessageVisible","checkItemRow","a","code","getItemRowRO","fetch","itemRowPromise","json","itemRowResult","data","row","setWarning","isPrice","price","startsWith","trimmed","includes","pieces","split","err","submitOrder","test","itemRow","console","log","getItemQtyRO","itemQtyPromise","itemQtyResult","itemQty","stockIn","stockOut","updateItemQtyRO","newQty","getOrdersInfoRO","ordersInfoPromise","ordersInfoResult","ordersSize","size","nextOrderRow","currInvoiceNumber","today","order","row_number","customer","invoice_number","invoice_date","createOrderRO","updatePrice","onChange","e","target","value","warningMessageComponent","SubmitOrderPage","OrderSubmittedPage","routes","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAQC,qBAAuB,SAAUC,GACrC,MAAgB,QAAZA,GAAiC,SAAZA,EACd,KAEJ,CACHC,OAAQD,EACRE,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEC,MAAON,EAAU,eAIhDF,EAAQC,qBAAuB,SAAUC,EAASG,GAC9C,MAAgB,QAAZH,GAAiC,SAAZA,EACd,KAEJ,CACHC,OAAQD,EACRE,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUF,M,0LCvBd,G,MAAA,IAA0B,8C,eCoB1BI,MAff,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qBAAKC,IAAKC,EAAMH,UAAU,WAAWI,IAAI,WAE7C,cAAC,IAAD,CAAMJ,UAAU,QAAQC,GAAG,eAA3B,SACI,qBAAKD,UAAU,SAAf,qCCDCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wCCPDQ,EAAoB,WAC7B,IAAMC,GAAO,IAAIC,MAAOC,cAAcC,WAChCC,IAAS,IAAIH,MAAOI,WAAa,GAAGF,WAE1C,OADY,IAAIF,MAAOK,UAAUH,WACpB,IAAMC,EAAQ,IAAMJ,GAExBO,EAA4B,SAACC,GACtC,IAAMR,EAAOQ,EAAkBC,UAAU,EAAG,GACtCL,EAAQI,EAAkBC,UAAU,EAAG,GACzCC,EAAQC,SAASH,EAAkBC,UAAU,IAE3CG,GAAW,IAAIX,MAAOC,cAAcC,WACtCU,IAAa,IAAIZ,MAAOI,WAAa,GAAGF,WAK5C,GAJyB,IAArBU,EAAUC,SACVD,EAAY,IAAMA,GAGlBb,IAASY,GAAYR,IAAUS,EAAW,CAG1C,IADAH,GADAA,GAAS,GACKP,WACPO,EAAMI,OAAS,GAClBJ,EAAQ,IAAMA,EAElB,OAAOV,EAAOI,EAAQM,EAE1B,OAAOE,EAAWC,EAAY,OAGrBE,EAAe,SAACC,EAAUC,EAAOC,EAAUC,EAAOC,GAC3D,OAAOJ,EAAWC,EAAQC,EAAWC,EAAQC,GAOpCC,EAAc,wCAEdC,EAAoB,CAC7B,cACA,cACA,KACA,aACA,aACA,SACA,KACA,SACA,aACA,QAESC,EAAoB,CAC7B,aACA,eACA,oBAGSC,EAAsB,CAC/B,MACA,WACA,YACA,UACA,iBAGSC,EAAsB,CAC/B,aACA,oBAGSC,EAAiB,CAC1B,oBACA,iCAGSC,EAAiB,CAC1B,qBAGSC,EAAmB,CAC5B,QACA,QACA,QACA,MACA,OACA,QACA,OACA,OACA,MAGSC,EAAkB,CAC3B,SACA,OACA,cACA,eACA,M,QC5FSC,G,MAAiB,SAACC,EAAeC,EAASC,GACnD,OACI,qBAAKhD,UAAU,YAAf,SACK+C,EAAQE,KAAI,SAAAC,GACT,IAAMC,EAASL,EAAgB,IAAMI,EACrC,OACI,sBAAKlD,UAAU,YAAf,UACI,uBAAOoD,KAAK,QAAQpD,UAAU,eAAeqD,KAAMP,EAAeQ,GAAIH,EAC/DI,QAAS,kBAAMP,EAASE,MAC/B,uBAAOM,QAASL,EAAQnD,UAAU,cAAlC,SAAiDkD,MAHrBA,UC0PrCO,MArPf,WACI,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCF,mBAAS,IAAzC,mBAAO3B,EAAP,KAAiB8B,EAAjB,KACA,EAA0BH,mBAAS,IAAnC,mBAAO1B,EAAP,KAAc8B,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOzB,EAAP,KAAiB8B,EAAjB,KACA,EAA0BL,mBAAS,IAAnC,mBAAOxB,EAAP,KAAc8B,EAAd,KACA,EAAwBN,mBAAS,IAAjC,mBAAOvB,EAAP,KAAa8B,EAAb,KACA,EAAsBP,mBAAS,KAA/B,mBAAOQ,EAAP,KAAYC,EAAZ,KACA,EAAgCT,mBAAS,KAAzC,mBAAOU,EAAP,KAAiBC,EAAjB,KACA,EAA4BX,mBAAS,IAArC,mBAAOY,GAAP,KAAeC,GAAf,KACA,GAA8Bb,mBAAS,MAAvC,qBAAOc,GAAP,MAAgBC,GAAhB,MACA,GAAwBf,mBAAS,KAAjC,qBAAOgB,GAAP,MAAaC,GAAb,MAEA,GAAoCjB,oBAAS,GAA7C,qBAAOkB,GAAP,MAAmBC,GAAnB,MACA,GAA4CnB,oBAAS,GAArD,qBAAOoB,GAAP,MAAuBC,GAAvB,MAEA,GAAwCrB,mBAAS,IAAjD,qBAAOsB,GAAP,MAAqBC,GAArB,MACA,GAAwCvB,mBAAS,IAAjD,qBAAOwB,GAAP,MAAqBC,GAArB,MACA,GAAkCzB,mBAAS,IAA3C,qBAAO0B,GAAP,MAAkBC,GAAlB,MACA,GAAgC3B,mBAAS,IAAzC,qBAAO4B,GAAP,MAAiBC,GAAjB,MAEA,GAA4C7B,mBAAS,IAArD,qBAAO8B,GAAP,MAAuBC,GAAvB,MACA,GAA4D/B,oBAAS,GAArE,qBAAOgC,GAAP,MAAgCC,GAAhC,MAGMC,GAAY,uCAAG,kCAAAC,EAAA,6DACXC,EAAOhE,EAAaC,EAAUC,EAAOC,EAAUC,EAAMC,GACrD4D,EAAexG,+BAAqB,OAAQ,CAACuG,KAAMA,IAFxC,SAGYE,MAAM5D,EAAc,gBAAiB2D,GAHjD,cAGXE,EAHW,gBAIWA,EAAeC,OAJ1B,cAIXC,EAJW,yBAKVA,EAAcC,KAAKC,KALT,2CAAH,qDAQZC,GAAa,SAACd,GAChBC,GAAkBD,GAClBG,IAAyB,IAQvBY,GAAU,SAACC,GACb,IAAKA,EAAMC,WAAW,KAClB,OAAO,EAEX,IACI,IAAMC,EAAUF,EAAMhF,UAAU,GAChC,GAAIkF,EAAQC,SAAS,KAAM,CACvB,IAAMC,EAASF,EAAQG,MAAM,KAC7B,OAAsB,IAAlBD,EAAO/E,SAGXH,SAASkF,EAAO,IAChBlF,SAASkF,EAAO,KACT,IAEb,MAAOE,GACL,OAAO,IAITC,GAAW,uCAAG,8DAAAlB,EAAA,yDAChBhB,IAAc,GAzBdc,IAAyB,GACzBF,GAAkB,IA0Bb,aAAauB,KAAK9C,GAHP,uBAIZoC,GAAW,qBAJC,6BAQhBjC,EAAyB,MAAbD,EAAmB,QAAUA,GACzCO,GAAiB,MAATD,GAAe,QAAUA,IAE5B6B,GAAQnC,GAXG,wBAYZkC,GAAW,qBACXzB,IAAc,GAbF,8BAiBX0B,GAAQ7B,IAjBG,wBAkBZ4B,GAAW,iBACXzB,IAAc,GAnBF,4CAuBMe,KAvBN,WAuBVqB,EAvBU,OAwBhBC,QAAQC,IAAIF,GACIA,GFrEN,EE4CM,wBA0BZX,GAAW,wBACXzB,IAAc,GA3BF,kCA+BVuC,EAAe7H,+BAAqB,OAAQ,CAAC8G,IAAKY,IA/BxC,UAgCajB,MAAM5D,EAAc,gBAAiBgF,GAhClD,eAgCVC,EAhCU,iBAiCYA,EAAenB,OAjC3B,WAiCVoB,EAjCU,OAkCVC,EAAUD,EAAclB,KACxBoB,EAAU9F,SAAS6F,EAAQC,SAC3BC,EAAW/F,SAAS6F,EAAQE,YAC9BD,EAAUC,GAAY,GArCV,wBAsCZnB,GAAW,0BACXzB,IAAc,GAvCF,kCA0CV6C,EAAkBnI,+BAAqB,OAAQ,CAAC8G,IAAKY,EAASU,OAAQF,EAAW,IA1CvE,UA2CVzB,MAAM5D,EAAc,sBAAuBsF,GA3CjC,eA6CVE,EAAkBrI,+BAAqB,OA7C7B,UA8CgByG,MAAM5D,EAAc,UAAWwF,GA9C/C,eA8CVC,EA9CU,iBA+CeA,EAAkB3B,OA/CjC,eA+CV4B,EA/CU,OAgDVC,EAAarG,SAASoG,EAAiB1B,KAAK4B,MAC5CzG,EAAoBuG,EAAiB1B,KAAK7E,kBAG1C0G,EADiBF,EAAa,EACE,EAEhCG,EAAoB5G,EAA0BC,GAC9C4G,EAAQrH,IAERsH,EAAQ,CACVC,WAAYJ,EACZK,SAAU3E,EACV4E,eAAgBL,EAChBM,aAAcL,EACdpG,SAAUA,EACVC,MAAOA,EACPC,SAAUA,EACVC,MAAOA,EACPC,KAAMA,EACN+B,IAAKA,EACLE,SAAUA,EACVE,OAAQA,GACRE,QAASA,GACTE,KAAMA,IAEJ+D,EAAgBlJ,+BAAqB,OAAQ6I,GAzEnC,UA0EVpC,MAAM5D,EAAc,SAAUqG,GA1EpB,QA2EhB5D,IAAc,GACdE,IAAkB,GA5EF,4CAAH,qDAyHX2D,GAAc,SAAClC,EAAOxD,GACnBwD,EAAMC,WAAW,KAItBzD,EAASwD,GAHLxD,EAAS,MAwBjB,OAAI8B,GACO,cAAC,IAAD,CAAU7E,GAAI,oBAIrB,sBAAKD,UAAU,OAAf,UACI,sBAAMA,UAAU,cAAhB,wBACA,sBAAMA,UAAU,aAAhB,6BACA,uBAAOA,UAAU,YAAYoD,KAAK,OAAOuF,SAAU,SAAAC,GAAC,OAAIhF,EAAgBgF,EAAEC,OAAOC,UACjF,sBAAM9I,UAAU,aAAhB,mBACC6C,EAAe,QAAS,CAAC,QAAS,UAAW,OAnElC,SAACb,GAMjB,OALAkF,QAAQC,IAAI,mBAAqBnF,GACjCmD,GAAgB,CAAC,OACjBF,GAAgB,CAAC,OACjBI,GAAa1C,GACb4C,GAAY,CAAC,OACLvD,GACJ,IAAK,QACDiD,GAAgB5C,GAChB8C,GAAgB7C,GAChB,MACJ,IAAK,UACD2C,GAAgB1C,GAChB4C,GAAgB3C,GAChB,MACJ,IAAK,KACDyC,GAAgBxC,GAChB0C,GAAgBzC,GAKxBoB,EAAS9B,MA8CL,sBAAMhC,UAAU,aAAhB,sBACC6C,EAAe,WAAYqC,IA5Cb,SAACnD,GACcsD,GAArB,qBAAbtD,EAA+C,CAAC,MAAsBY,GAC1C4C,GAAf,eAAbxD,EAAwCa,EAA+B,CAAC,OACxEiB,EAAY9B,MA0CR,sBAAM/B,UAAU,aAAhB,sBACC6C,EAAe,WAAYmC,GAAcjB,GAC1C,sBAAM/D,UAAU,aAAhB,oBACC6C,EAAe,QAASuC,GAAWpB,GACpC,sBAAMhE,UAAU,aAAhB,yBACC6C,EAAe,OAAQyC,GAAUrB,GAClC,sBAAMjE,UAAU,aAAhB,sBACA,uBAAOA,UAAU,YAAYoD,KAAK,SAAS0F,MAAO5E,EAAKyE,SAAU,SAAAC,GAAC,OAAIzE,EAAOyE,EAAEC,OAAOC,UACtF,sBAAM9I,UAAU,aAAhB,sBACA,uBAAOA,UAAU,YAAYoD,KAAK,OAAO0F,MAAO1E,EAAUuE,SAAU,SAAAC,GAAC,OAAIF,GAAYE,EAAEC,OAAOC,MAAOzE,MACrG,sBAAMrE,UAAU,aAAhB,oBACC6C,EAAe,SAAU,CAAC,YAAa,QAAS0B,IACjD,sBAAMvE,UAAU,aAAhB,qBACA,uBAAOA,UAAU,YAAYoD,KAAK,OAAO0F,MAAOtE,GAASmE,SAAU,SAAAC,GAAC,OAAInE,GAAWmE,EAAEC,OAAOC,UAC5F,sBAAM9I,UAAU,aAAhB,kBACA,uBAAOA,UAAU,YAAYoD,KAAK,OAAO0F,MAAOpE,GAAMiE,SAAU,SAAAC,GAAC,OAAIF,GAAYE,EAAEC,OAAOC,MAAOnE,OAChGe,GA/CuB,SAACF,GAC7B,OACI,sBAAMxF,UAAU,kBAAhB,SAAmCwF,IA6CRuD,CAAwBvD,IAAkB,KAhGjD,KAAjB7B,GACU,KAAV3B,GACa,KAAbD,GACa,KAAbE,GACU,KAAVC,GACS,KAATC,GACW,KAAXmC,KACe,IAAfM,GAwDH,qBAAK5E,UAAU,cAAcuD,QAASwD,GAAtC,0BAND,qBAAK/G,UAAU,uBAAf,8BCnMIgJ,MAbf,WACI,OACI,qBAAKhJ,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qBAAKC,IAAKC,EAAMH,UAAU,wBAAwBI,IAAI,WAE1D,cAAC,EAAD,U,MCSD6I,MAhBf,WACI,OACI,qBAAKjJ,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qBAAKC,IAAKC,EAAMH,UAAU,WAAWI,IAAI,WAE7C,sBAAMJ,UAAU,oBAAhB,8BACA,cAAC,IAAD,CAAMA,UAAU,QAAQC,GAAG,IAA3B,SACI,qBAAKD,UAAU,SAAf,sCCNdkJ,EACF,cAAC,IAAD,UACI,gCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtJ,IACjC,cAAC,IAAD,CAAOqJ,KAAK,eAAeC,UAAWL,IACtC,cAAC,IAAD,CAAOI,KAAK,kBAAkBC,UAAWJ,SAKrDK,IAASC,OAAOL,EAAQM,SAASC,eAAe,SAKhDpJ,M","file":"static/js/main.93e74b2f.chunk.js","sourcesContent":["\nexports.createRequestOptions = function (reqType) {\n    if (reqType !== 'GET' && reqType !== 'POST') {\n        return null\n    }\n    return {\n        method: reqType,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ title: reqType + ' request' })\n    }\n}\n\nexports.createRequestOptions = function (reqType, body) {\n    if (reqType !== 'GET' && reqType !== 'POST') {\n        return null\n    }\n    return {\n        method: reqType,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body)\n    }\n}\n","export default __webpack_public_path__ + \"static/media/logo_transparent.0891df4c.png\";","import logo from './assets/logo_transparent.png';\nimport './App.css';\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n          <Link to=\"/\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n          </Link>\n          <Link className=\"links\" to=\"/submitOrder\">\n              <div className=\"button\">Submit an Order</div>\n          </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const generateTodayDate = () => {\n    const year = new Date().getFullYear().toString()\n    const month = (new Date().getMonth() + 1).toString()\n    const day = new Date().getDate().toString()\n    return day + \"/\" + month + \"/\" + year\n}\nexport const generateNextInvoiceNumber = (lastInvoiceNumber) => {\n    const year = lastInvoiceNumber.substring(0, 4)\n    const month = lastInvoiceNumber.substring(4, 6)\n    let index = parseInt(lastInvoiceNumber.substring(6))\n\n    const currYear = new Date().getFullYear().toString()\n    let currMonth = (new Date().getMonth() + 1).toString()\n    if (currMonth.length === 1) {\n        currMonth = \"0\" + currMonth\n    }\n\n    if (year === currYear && month === currMonth) {\n        index += 1\n        index = index.toString()\n        while (index.length < 3) {\n            index = \"0\" + index\n        }\n        return year + month + index\n    }\n    return currYear + currMonth + \"001\"\n}\n\nexport const generateCode = (category, brand, detailed, color, desc) => {\n    return category + brand + detailed + color + desc\n}\n\nexport const itemExists = (row) => {\n    return row >= 4\n}\n\nexport const apiEndpoint = \"https://rhq-backend.herokuapp.com/api\"\n\nexport const appleDetailedList = [\n    \"Airpods 1/2\",\n    \"Airpods Pro\",\n    \"12\",\n    \"12/ 12 Pro\",\n    \"12 Pro max\",\n    \"12 Pro\",\n    \"11\",\n    \"11 Pro\",\n    \"11 Pro max\",\n    \"X/XS\"\n]\nexport const appleCategoryList = [\n    \"Phone case\",\n    \"Airpods case\",\n    \"Screen protector\"\n]\n\nexport const samsungDetailedList = [\n    \"S21\",\n    \"S21 Plus\",\n    \"S21 Ultra\",\n    \"Note 20\",\n    \"Note 20 Ultra\"\n]\n\nexport const samsungCategoryList = [\n    \"Phone case\",\n    \"Screen protector\"\n]\n\nexport const naDetailedList = [\n    \"Selfie ring light\",\n    \"Magnetic car mount stand ring\",\n]\n\nexport const naCategoryList = [\n    \"Phone accessories\"\n]\n\nexport const defaultColorList = [\n    \"Azure\",\n    \"Black\",\n    \"White\",\n    \"Red\",\n    \"Pink\",\n    \"Clear\",\n    \"Blue\",\n    \"Gold\",\n    \"NA\"\n]\n\nexport const defaultDescList = [\n    \"Border\",\n    \"Matt\",\n    \"Ultra thick\",\n    \"Camera cover\",\n    \"NA\"\n]\n","import React from \"react\";\nimport \"./submitOrderForm.css\"\n\nexport const radioSelection = (selectionName, options, callback) => {\n    return (\n        <div className=\"radio-row\">\n            {options.map(option => {\n                const htmlId = selectionName + \" \" + option\n                return (\n                    <div className=\"radio-box\" key={option}>\n                        <input type=\"radio\" className=\"radio-button\" name={selectionName} id={htmlId}\n                               onClick={() => callback(option)}/>\n                        <label htmlFor={htmlId} className=\"radio-label\">{option}</label>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n","import {\n    apiEndpoint, appleCategoryList,\n    appleDetailedList, defaultColorList, defaultDescList,\n    generateCode,\n    generateNextInvoiceNumber,\n    generateTodayDate, itemExists, naCategoryList, naDetailedList, samsungCategoryList,\n    samsungDetailedList\n} from \"./common\";\nimport {createRequestOptions} from \"./requestBuilder\";\nimport React, {useState} from \"react\";\nimport \"./submitOrderForm.css\";\nimport {radioSelection} from \"./formComponents\";\nimport { Redirect } from 'react-router-dom'\n\nfunction SubmitOrderForm() {\n    const [customerName, setCustomerName] = useState(\"\");\n    const [category, setCategory] = useState(\"\")\n    const [brand, setBrand] = useState(\"\")\n    const [detailed, setDetailed] = useState(\"\")\n    const [color, setColor] = useState(\"\")\n    const [desc, setDesc] = useState(\"\")\n    const [qty, setQty] = useState(\"1\")\n    const [discount, setDiscount] = useState(\"$\")\n    const [status, setStatus] = useState(\"\")\n    const [remarks, setRemarks] = useState(\"NA\")\n    const [tips, setTips] = useState(\"$\")\n\n    const [submitting, setSubmitting] = useState(false)\n    const [shouldRedirect, setShouldRedirect] = useState(false)\n\n    const [detailedList, setDetailedList] = useState([])\n    const [categoryList, setCategoryList] = useState([])\n    const [colorList, setColorList] = useState([])\n    const [descList, setDescList] = useState([])\n\n    const [warningMessage, setWarningMessage] = useState(\"\")\n    const [isWarningMessageVisible, setWarningMessageVisible] = useState(false)\n\n\n    const checkItemRow = async () => {\n        const code = generateCode(category, brand, detailed, color,desc)\n        const getItemRowRO = createRequestOptions('POST', {code: code})\n        const itemRowPromise = await fetch(apiEndpoint + '/inventoryRow', getItemRowRO)\n        const itemRowResult = await itemRowPromise.json()\n        return itemRowResult.data.row\n    }\n\n    const setWarning = (warningMessage) => {\n        setWarningMessage(warningMessage)\n        setWarningMessageVisible(true)\n    }\n\n    const resetWarningMessages = () => {\n        setWarningMessageVisible(false)\n        setWarningMessage(\"\")\n    }\n\n    const isPrice = (price) => {\n        if (!price.startsWith(\"$\")) {\n            return false\n        }\n        try {\n            const trimmed = price.substring(1)\n            if (trimmed.includes(\".\")) {\n                const pieces = trimmed.split(\".\")\n                if (pieces.length !== 2) {\n                    return false\n                }\n                parseInt(pieces[0])\n                parseInt(pieces[1])\n                return true\n            }\n        } catch (err) {\n            return false\n        }\n    }\n\n    const submitOrder = async () => {\n        setSubmitting(true)\n        resetWarningMessages()\n        if (!/^[1-9]\\d*$/.test(qty)) {\n            setWarning(\"Invalid quantity!\")\n            return\n        }\n\n        setDiscount(discount === \"$\" ? \"$0.00\" : discount)\n        setTips(tips === \"$\" ? \"$0.00\" : tips)\n\n        if (!isPrice(discount)) {\n            setWarning(\"Invalid discount!\")\n            setSubmitting(false)\n            return\n        }\n\n        if (!isPrice(tips)) {\n            setWarning(\"Invalid tips!\")\n            setSubmitting(false)\n            return\n        }\n\n        const itemRow = await checkItemRow();\n        console.log(itemRow)\n        if (!itemExists(itemRow)) {\n            setWarning(\"Item does not exists\")\n            setSubmitting(false)\n            return\n        }\n\n        const getItemQtyRO = createRequestOptions('POST', {row: itemRow})\n        const itemQtyPromise = await fetch(apiEndpoint + '/inventoryQty', getItemQtyRO)\n        const itemQtyResult = await itemQtyPromise.json()\n        const itemQty = itemQtyResult.data\n        const stockIn = parseInt(itemQty.stockIn)\n        const stockOut = parseInt(itemQty.stockOut)\n        if (stockIn + stockOut <= 0) {\n            setWarning(\"Out of stock for item!\")\n            setSubmitting(false)\n            return\n        }\n        const updateItemQtyRO = createRequestOptions('POST', {row: itemRow, newQty: stockOut - 1})\n        await fetch(apiEndpoint + '/inventoryUpdateQty', updateItemQtyRO)\n\n        const getOrdersInfoRO = createRequestOptions('GET')\n        const ordersInfoPromise = await fetch(apiEndpoint + '/orders', getOrdersInfoRO)\n        const ordersInfoResult = await ordersInfoPromise.json()\n        const ordersSize = parseInt(ordersInfoResult.data.size)\n        const lastInvoiceNumber = ordersInfoResult.data.lastInvoiceNumber\n\n        const nextOrderIndex = ordersSize + 1\n        const nextOrderRow = nextOrderIndex + 1\n\n        const currInvoiceNumber = generateNextInvoiceNumber(lastInvoiceNumber)\n        const today = generateTodayDate()\n\n        const order = {\n            row_number: nextOrderRow,\n            customer: customerName,\n            invoice_number: currInvoiceNumber,\n            invoice_date: today,\n            category: category,\n            brand: brand,\n            detailed: detailed,\n            color: color,\n            desc: desc,\n            qty: qty,\n            discount: discount,\n            status: status,\n            remarks: remarks,\n            tips: tips,\n        }\n        const createOrderRO = createRequestOptions('POST', order)\n        await fetch(apiEndpoint + '/order', createOrderRO)\n        setSubmitting(false)\n        setShouldRedirect(true)\n    }\n\n    const canSubmit = () => {\n        return customerName !== \"\"\n            && brand !== \"\"\n            && category !== \"\"\n            && detailed !== \"\"\n            && color !== \"\"\n            && desc !== \"\"\n            && status !== \"\"\n            && submitting === false\n    }\n\n    const updateBrand = (brand) => {\n        console.log(\"settin brand to \" + brand)\n        setCategoryList([\"NA\"])\n        setDetailedList([\"NA\"])\n        setColorList(defaultColorList)\n        setDescList([\"NA\"])\n        switch (brand) {\n            case \"Apple\":\n                setDetailedList(appleDetailedList)\n                setCategoryList(appleCategoryList)\n                break;\n            case \"Samsung\":\n                setDetailedList(samsungDetailedList)\n                setCategoryList(samsungCategoryList)\n                break;\n            case \"NA\":\n                setDetailedList(naDetailedList)\n                setCategoryList(naCategoryList)\n                break;\n            default:\n                break;\n        }\n        setBrand(brand)\n    }\n\n    const updateCategory = (category) => {\n        category === \"Screen protector\" ? setColorList([\"NA\"]) : setColorList(defaultColorList)\n        category === \"Phone case\" ? setDescList(defaultDescList) : setDescList([\"NA\"])\n        setCategory(category)\n    }\n\n    const updatePrice = (price, callback) => {\n        if (!price.startsWith(\"$\")) {\n            callback(\"$\")\n            return\n        }\n        callback(price)\n    }\n\n    const warningMessageComponent = (warningMessage) => {\n        return (\n            <span className=\"warning-message\">{warningMessage}</span>\n        )\n    }\n\n    const inactiveButton = () => {\n       return (\n           <div className=\"form-button-inactive\">Submit Order</div>\n       )\n    }\n\n    const activeButton = () => {\n        return (\n            <div className=\"form-button\" onClick={submitOrder}>Submit Order</div>\n        )\n    }\n\n    if (shouldRedirect) {\n        return <Redirect to={'/orderSubmitted'} />\n    }\n\n    return (\n        <div className=\"form\">\n            <span className=\"form-header\">Order Form</span>\n            <span className=\"form-label\">Customer's name</span>\n            <input className=\"input-box\" type=\"text\" onChange={e => setCustomerName(e.target.value)}/>\n            <span className=\"form-label\">Brand</span>\n            {radioSelection(\"brand\", [\"Apple\", \"Samsung\", \"NA\"], updateBrand)}\n            <span className=\"form-label\">Category</span>\n            {radioSelection(\"category\", categoryList, updateCategory)}\n            <span className=\"form-label\">Detailed</span>\n            {radioSelection(\"detailed\", detailedList, setDetailed)}\n            <span className=\"form-label\">Colour</span>\n            {radioSelection(\"color\", colorList, setColor)}\n            <span className=\"form-label\">Description</span>\n            {radioSelection(\"desc\", descList, setDesc)}\n            <span className=\"form-label\">Quantity</span>\n            <input className=\"input-box\" type=\"number\" value={qty} onChange={e => setQty(e.target.value)}/>\n            <span className=\"form-label\">Discount</span>\n            <input className=\"input-box\" type=\"text\" value={discount} onChange={e => updatePrice(e.target.value, setDiscount)}/>\n            <span className=\"form-label\">Status</span>\n            {radioSelection(\"status\", [\"Confirmed\", \"Paid\"], setStatus)}\n            <span className=\"form-label\">Remarks</span>\n            <input className=\"input-box\" type=\"text\" value={remarks} onChange={e => setRemarks(e.target.value)}/>\n            <span className=\"form-label\">Tips</span>\n            <input className=\"input-box\" type=\"text\" value={tips} onChange={e => updatePrice(e.target.value, setTips)}/>\n            {isWarningMessageVisible ? warningMessageComponent(warningMessage) : null}\n            {canSubmit() ? activeButton() : inactiveButton()}\n        </div>\n    )\n}\n\nexport default SubmitOrderForm;\n","import logo from \"./assets/logo_transparent.png\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./submitOrderPage.css\"\nimport SubmitOrderForm from \"./submitOrderForm\";\n\nfunction SubmitOrderPage() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Link to=\"/\">\n                    <img src={logo} className=\"submit-order-app-logo\" alt=\"logo\"/>\n                </Link>\n                <SubmitOrderForm />\n            </header>\n        </div>\n    );\n}\n\nexport default SubmitOrderPage;\n","import logo from './assets/logo_transparent.png';\nimport './App.css';\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./orderSubmittedPage.css\";\n\nfunction OrderSubmittedPage() {\n    return (\n        <div className=\"App\">\n            <div className=\"App-header\">\n                <Link to=\"/\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                </Link>\n                <span className=\"submitted-message\">Order submitted!</span>\n                <Link className=\"links\" to=\"/\">\n                    <div className=\"button\">Back to Homepage</div>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default OrderSubmittedPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport SubmitOrderPage from \"./submitOrderPage\";\nimport OrderSubmittedPage from \"./orderSubmittedPage\";\n\nconst routes = (\n    <BrowserRouter>\n        <div>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/submitOrder\" component={SubmitOrderPage} />\n            <Route path=\"/orderSubmitted\" component={OrderSubmittedPage} />\n        </div>\n    </ BrowserRouter >\n);\n\nReactDOM.render(routes, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}