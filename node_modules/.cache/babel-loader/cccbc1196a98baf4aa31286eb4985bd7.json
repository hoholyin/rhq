{"ast":null,"code":"var _jsxFileName = \"/Users/hoholyin/Desktop/Personal/rhq/rhq-web/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { createRequestOptions } from \"./requestBuilder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const generateTodayDate = () => {\n    const year = new Date().getFullYear().toString();\n    const month = (new Date().getMonth() + 1).toString();\n    const day = new Date().getDate().toString();\n    return day + \"/\" + month + \"/\" + year;\n  };\n\n  const generateNextInvoiceNumber = lastInvoiceNumber => {\n    const year = lastInvoiceNumber.substring(0, 4);\n    const month = lastInvoiceNumber.substring(4, 6);\n    let index = parseInt(lastInvoiceNumber.substring(6));\n    const currYear = new Date().getFullYear().toString();\n    let currMonth = (new Date().getMonth() + 1).toString();\n\n    if (currMonth.length === 1) {\n      currMonth = \"0\" + currMonth;\n    }\n\n    if (year === currYear && month === currMonth) {\n      index += 1;\n      index = index.toString();\n\n      while (index.length < 3) {\n        index = \"0\" + index;\n      }\n\n      return year + month + index;\n    }\n\n    return currYear + currMonth + \"001\";\n  };\n\n  const generateCode = (category, brand, detailed, color, desc) => {\n    return category + brand + detailed + color + desc;\n  };\n\n  const submitOrder = async () => {\n    const code = generateCode('Phone case', 'Apple', '12 Pro max', 'Clear', '');\n    const getItemRowRO = createRequestOptions('POST', {\n      code: code\n    });\n    const itemRowPromise = await fetch('http://localhost:8080/api/inventory', getItemRowRO);\n    const itemRowResult = itemRowPromise.json();\n    const itemRow = itemRowResult.data.row;\n    console.log(itemRow);\n    const getOrdersInfoRO = createRequestOptions('GET');\n    const ordersInfoPromise = await fetch('http://localhost:8080/api/orders', getOrdersInfoRO);\n    const ordersInfoResult = ordersInfoPromise.json();\n    const ordersSize = parseInt(ordersInfoResult.data.size);\n    const lastInvoiceNumber = ordersInfoResult.data.lastInvoiceNumber;\n    const nextOrderIndex = ordersSize + 1;\n    const nextOrderRow = nextOrderIndex + 1;\n    const currInvoiceNumber = generateNextInvoiceNumber(lastInvoiceNumber);\n    const today = generateTodayDate();\n    const order = {\n      row_number: nextOrderRow,\n      customer: 'test_name',\n      invoice_number: currInvoiceNumber,\n      invoice_date: today,\n      category: 'test_cat',\n      brand: 'test_brand',\n      detailed: 'test_detailed',\n      color: 'test_color',\n      desc: 'test_desc',\n      qty: '1',\n      discount: '$0.01',\n      status: 'PAID',\n      remarks: 'test_remarks',\n      tips: '$10'\n    };\n    const createOrderRO = createRequestOptions('POST', order);\n    await fetch('http://localhost:8080/api/order', createOrderRO);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        onClick: () => submitOrder()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => submitOrder(),\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hoholyin/Desktop/Personal/rhq/rhq-web/src/App.js"],"names":["createRequestOptions","App","generateTodayDate","year","Date","getFullYear","toString","month","getMonth","day","getDate","generateNextInvoiceNumber","lastInvoiceNumber","substring","index","parseInt","currYear","currMonth","length","generateCode","category","brand","detailed","color","desc","submitOrder","code","getItemRowRO","itemRowPromise","fetch","itemRowResult","json","itemRow","data","row","console","log","getOrdersInfoRO","ordersInfoPromise","ordersInfoResult","ordersSize","size","nextOrderIndex","nextOrderRow","currInvoiceNumber","today","order","row_number","customer","invoice_number","invoice_date","qty","discount","status","remarks","tips","createOrderRO","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {createRequestOptions} from \"./requestBuilder\";\n\nfunction App() {\n    const generateTodayDate = () => {\n        const year = new Date().getFullYear().toString()\n        const month = (new Date().getMonth() + 1).toString()\n        const day = new Date().getDate().toString()\n        return day + \"/\" + month + \"/\" + year\n    }\n    const generateNextInvoiceNumber = (lastInvoiceNumber) => {\n        const year = lastInvoiceNumber.substring(0, 4)\n        const month = lastInvoiceNumber.substring(4, 6)\n        let index = parseInt(lastInvoiceNumber.substring(6))\n\n        const currYear = new Date().getFullYear().toString()\n        let currMonth = (new Date().getMonth() + 1).toString()\n        if (currMonth.length === 1) {\n            currMonth = \"0\" + currMonth\n        }\n\n        if (year === currYear && month === currMonth) {\n            index += 1\n            index = index.toString()\n            while (index.length < 3) {\n                index = \"0\" + index\n            }\n            return year + month + index\n        }\n        return currYear + currMonth + \"001\"\n    }\n\n    const generateCode = (category, brand, detailed, color, desc) => {\n        return category + brand + detailed + color + desc\n    }\n\n    const submitOrder = async () => {\n        const code = generateCode('Phone case', 'Apple', '12 Pro max', 'Clear', '')\n        const getItemRowRO = createRequestOptions('POST', {code: code})\n        const itemRowPromise = await fetch('http://localhost:8080/api/inventory', getItemRowRO)\n        const itemRowResult = itemRowPromise.json()\n        const itemRow = itemRowResult.data.row\n        console.log(itemRow)\n\n        const getOrdersInfoRO = createRequestOptions('GET')\n        const ordersInfoPromise = await fetch('http://localhost:8080/api/orders', getOrdersInfoRO)\n        const ordersInfoResult = ordersInfoPromise.json()\n        const ordersSize = parseInt(ordersInfoResult.data.size)\n        const lastInvoiceNumber = ordersInfoResult.data.lastInvoiceNumber\n\n        const nextOrderIndex = ordersSize + 1\n        const nextOrderRow = nextOrderIndex + 1\n\n        const currInvoiceNumber = generateNextInvoiceNumber(lastInvoiceNumber)\n        const today = generateTodayDate()\n\n        const order = {\n            row_number: nextOrderRow,\n            customer: 'test_name',\n            invoice_number: currInvoiceNumber,\n            invoice_date: today,\n            category: 'test_cat',\n            brand: 'test_brand',\n            detailed: 'test_detailed',\n            color: 'test_color',\n            desc: 'test_desc',\n            qty: '1',\n            discount: '$0.01',\n            status: 'PAID',\n            remarks: 'test_remarks',\n            tips: '$10',\n        }\n        const createOrderRO = createRequestOptions('POST', order)\n        await fetch('http://localhost:8080/api/order', createOrderRO)\n    }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" onClick={() => submitOrder()}/>\n        <span onClick={() => submitOrder()}>Hello</span>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}