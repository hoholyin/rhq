{"ast":null,"code":"export const generateTodayDate = () => {\n  const year = new Date().getFullYear().toString();\n  const month = (new Date().getMonth() + 1).toString();\n  const day = new Date().getDate().toString();\n  return day + \"/\" + month + \"/\" + year;\n};\nexport const generateNextInvoiceNumber = lastInvoiceNumber => {\n  const year = lastInvoiceNumber.substring(0, 4);\n  const month = lastInvoiceNumber.substring(4, 6);\n  let index = parseInt(lastInvoiceNumber.substring(6));\n  const currYear = new Date().getFullYear().toString();\n  let currMonth = (new Date().getMonth() + 1).toString();\n\n  if (currMonth.length === 1) {\n    currMonth = \"0\" + currMonth;\n  }\n\n  if (year === currYear && month === currMonth) {\n    index += 1;\n    index = index.toString();\n\n    while (index.length < 3) {\n      index = \"0\" + index;\n    }\n\n    return year + month + index;\n  }\n\n  return currYear + currMonth + \"001\";\n};\nexport const generateCode = (category, brand, detailed, color, desc) => {\n  return category + brand + detailed + color + desc;\n};","map":{"version":3,"sources":["/Users/hoholyin/Desktop/Personal/rhq/rhq-web/src/common.js"],"names":["generateTodayDate","year","Date","getFullYear","toString","month","getMonth","day","getDate","generateNextInvoiceNumber","lastInvoiceNumber","substring","index","parseInt","currYear","currMonth","length","generateCode","category","brand","detailed","color","desc"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,MAAM;AACnC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,QAAzB,EAAb;AACA,QAAMC,KAAK,GAAG,CAAC,IAAIH,IAAJ,GAAWI,QAAX,KAAwB,CAAzB,EAA4BF,QAA5B,EAAd;AACA,QAAMG,GAAG,GAAG,IAAIL,IAAJ,GAAWM,OAAX,GAAqBJ,QAArB,EAAZ;AACA,SAAOG,GAAG,GAAG,GAAN,GAAYF,KAAZ,GAAoB,GAApB,GAA0BJ,IAAjC;AACH,CALM;AAMP,OAAO,MAAMQ,yBAAyB,GAAIC,iBAAD,IAAuB;AAC5D,QAAMT,IAAI,GAAGS,iBAAiB,CAACC,SAAlB,CAA4B,CAA5B,EAA+B,CAA/B,CAAb;AACA,QAAMN,KAAK,GAAGK,iBAAiB,CAACC,SAAlB,CAA4B,CAA5B,EAA+B,CAA/B,CAAd;AACA,MAAIC,KAAK,GAAGC,QAAQ,CAACH,iBAAiB,CAACC,SAAlB,CAA4B,CAA5B,CAAD,CAApB;AAEA,QAAMG,QAAQ,GAAG,IAAIZ,IAAJ,GAAWC,WAAX,GAAyBC,QAAzB,EAAjB;AACA,MAAIW,SAAS,GAAG,CAAC,IAAIb,IAAJ,GAAWI,QAAX,KAAwB,CAAzB,EAA4BF,QAA5B,EAAhB;;AACA,MAAIW,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxBD,IAAAA,SAAS,GAAG,MAAMA,SAAlB;AACH;;AAED,MAAId,IAAI,KAAKa,QAAT,IAAqBT,KAAK,KAAKU,SAAnC,EAA8C;AAC1CH,IAAAA,KAAK,IAAI,CAAT;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAACR,QAAN,EAAR;;AACA,WAAOQ,KAAK,CAACI,MAAN,GAAe,CAAtB,EAAyB;AACrBJ,MAAAA,KAAK,GAAG,MAAMA,KAAd;AACH;;AACD,WAAOX,IAAI,GAAGI,KAAP,GAAeO,KAAtB;AACH;;AACD,SAAOE,QAAQ,GAAGC,SAAX,GAAuB,KAA9B;AACH,CApBM;AAsBP,OAAO,MAAME,YAAY,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,EAA4BC,KAA5B,EAAmCC,IAAnC,KAA4C;AACpE,SAAOJ,QAAQ,GAAGC,KAAX,GAAmBC,QAAnB,GAA8BC,KAA9B,GAAsCC,IAA7C;AACH,CAFM","sourcesContent":["export const generateTodayDate = () => {\n    const year = new Date().getFullYear().toString()\n    const month = (new Date().getMonth() + 1).toString()\n    const day = new Date().getDate().toString()\n    return day + \"/\" + month + \"/\" + year\n}\nexport const generateNextInvoiceNumber = (lastInvoiceNumber) => {\n    const year = lastInvoiceNumber.substring(0, 4)\n    const month = lastInvoiceNumber.substring(4, 6)\n    let index = parseInt(lastInvoiceNumber.substring(6))\n\n    const currYear = new Date().getFullYear().toString()\n    let currMonth = (new Date().getMonth() + 1).toString()\n    if (currMonth.length === 1) {\n        currMonth = \"0\" + currMonth\n    }\n\n    if (year === currYear && month === currMonth) {\n        index += 1\n        index = index.toString()\n        while (index.length < 3) {\n            index = \"0\" + index\n        }\n        return year + month + index\n    }\n    return currYear + currMonth + \"001\"\n}\n\nexport const generateCode = (category, brand, detailed, color, desc) => {\n    return category + brand + detailed + color + desc\n}\n"]},"metadata":{},"sourceType":"module"}