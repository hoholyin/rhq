[{"/Users/hoholyin/Desktop/Personal/rhq/src/index.js":"1","/Users/hoholyin/Desktop/Personal/rhq/src/App.js":"2","/Users/hoholyin/Desktop/Personal/rhq/src/reportWebVitals.js":"3","/Users/hoholyin/Desktop/Personal/rhq/src/common.js":"4","/Users/hoholyin/Desktop/Personal/rhq/src/requestBuilder.js":"5","/Users/hoholyin/Desktop/Personal/rhq/src/Home.js":"6","/Users/hoholyin/Desktop/Personal/rhq/src/Loader.js":"7","/Users/hoholyin/Desktop/Personal/rhq/src/pages/orderSubmittedPage.js":"8","/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrderPage.js":"9","/Users/hoholyin/Desktop/Personal/rhq/src/pages/checkInventoryPage.js":"10","/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrderForm.js":"11","/Users/hoholyin/Desktop/Personal/rhq/src/pages/InventoryList.js":"12","/Users/hoholyin/Desktop/Personal/rhq/src/pages/formComponents.js":"13","/Users/hoholyin/Desktop/Personal/rhq/src/pages/addExpensesPage.js":"14","/Users/hoholyin/Desktop/Personal/rhq/src/pages/addExpensesForm.js":"15"},{"size":442,"mtime":1627027803034,"results":"16","hashOfConfig":"17"},{"size":1570,"mtime":1630289330273,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1626788179110,"results":"19","hashOfConfig":"20"},{"size":3941,"mtime":1630294229635,"results":"21","hashOfConfig":"17"},{"size":889,"mtime":1628694390333,"results":"22","hashOfConfig":"17"},{"size":664,"mtime":1630289296490,"results":"23","hashOfConfig":"17"},{"size":337,"mtime":1627032639998,"results":"24","hashOfConfig":"17"},{"size":725,"mtime":1630295949186,"results":"25","hashOfConfig":"17"},{"size":586,"mtime":1630287789129,"results":"26","hashOfConfig":"17"},{"size":3026,"mtime":1630397251825,"results":"27","hashOfConfig":"17"},{"size":16057,"mtime":1630396236676,"results":"28","hashOfConfig":"17"},{"size":897,"mtime":1628217835996,"results":"29","hashOfConfig":"17"},{"size":702,"mtime":1627025087120,"results":"30","hashOfConfig":"17"},{"size":586,"mtime":1630290054817,"results":"31","hashOfConfig":"17"},{"size":8815,"mtime":1630394886635,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19x70hs",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"enfqkt",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"/Users/hoholyin/Desktop/Personal/rhq/src/index.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/App.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/reportWebVitals.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/common.js",["66"],"import {createRequestOptions} from \"./requestBuilder\";\n\nexport const generateTodayDate = () => {\n    const year = new Date().getFullYear().toString()\n    const month = (new Date().getMonth() + 1).toString()\n    const day = new Date().getDate().toString()\n    return month + \"/\" + day + \"/\" + year\n}\nexport const generateNextInvoiceNumber = (lastInvoiceNumber) => {\n    const year = lastInvoiceNumber.substring(0, 4)\n    const month = lastInvoiceNumber.substring(4, 6)\n    let index = parseInt(lastInvoiceNumber.substring(6))\n\n    const currYear = new Date().getFullYear().toString()\n    let currMonth = (new Date().getMonth() + 1).toString()\n    if (currMonth.length === 1) {\n        currMonth = \"0\" + currMonth\n    }\n\n    if (year === currYear && month === currMonth) {\n        index += 1\n        index = index.toString()\n        while (index.length < 3) {\n            index = \"0\" + index\n        }\n        return year + month + index\n    }\n    return currYear + currMonth + \"001\"\n}\n\nexport const generateNextCashInOutIndexNumber = (lastCashInIndex) => {\n    let lastCashInIndexNumber = parseInt(lastCashInIndex.substring(2))\n    lastCashInIndexNumber += 1\n    lastCashInIndexNumber = lastCashInIndexNumber.toString()\n    while (lastCashInIndexNumber.length < 3) {\n        lastCashInIndexNumber = \"0\" + lastCashInIndexNumber\n    }\n    return lastCashInIndex.substring(0, 2) + lastCashInIndexNumber\n}\n\nexport const generateCode = (category, brand, detailed, color, desc) => {\n    return category + brand + detailed + color + desc\n}\n\nexport const itemExists = (row) => {\n    return row >= 2\n}\n\nexport const isPrice = (price) => {\n    if (!price.startsWith(\"$\")) {\n        return false\n    }\n    try {\n        const trimmed = price.substring(1)\n        return !isNaN(trimmed)\n    } catch (err) {\n        return false\n    }\n}\n\n\nexport const addPrice = (p1, p2) => {\n    if (!isPrice(p1) || !isPrice(p2)) {\n        return \"$0.00\"\n    }\n    const p1Float = parseFloat(p1.substring(1))\n    const p2Float = parseFloat(p2.substring(1))\n    let totalFloat = (p1Float + p2Float).toString()\n    if (!totalFloat.includes(\".\")) {\n        totalFloat += \".00\"\n    }\n    while (totalFloat.split(\".\")[1].length < 2) {\n        totalFloat += \"0\"\n    }\n    return \"$\" + totalFloat\n}\n\nexport const toLocObjectArray = (locString) => {\n    if (locString === \"NA\") {\n        return []\n    }\n    let parts = locString.split(\",\")\n    return parts.map((e) => e.trim())\n        .map((e) => {\n            const name = e.split(\"(\")[0]\n            const qty = e.split(\"(\")[1].split(\")\")[0]\n            return {\n                name: name,\n                qty: parseInt(qty)\n            }\n        })\n}\n\nexport const toLocString = (locObjectArray) => {\n    if (locObjectArray.length === 0) {\n        return \"NA\"\n    }\n    return locObjectArray.map((e) => {\n        return e.name + \"(\" + e.qty + \")\"\n    }).join(\", \")\n}\n\nexport const apiEndpoint = \"https://rhq-backend.herokuapp.com/api\"\n\nexport const appleDetailedList = [\n    \"Airpods 1/2\",\n    \"Airpods Pro\",\n    \"12\",\n    \"12/ 12 Pro\",\n    \"12 Pro max\",\n    \"12 Pro\",\n    \"11\",\n    \"11 Pro\",\n    \"11 Pro max\",\n    \"X/XS\",\n    \"38mm-40mm\",\n    \"40mm-42mm\",\n]\nexport const appleCategoryList = [\n    \"Phone case\",\n    \"Airpods case\",\n    \"Screen protector\",\n    \"Watch Strap\"\n]\n\nexport const samsungDetailedList = [\n    \"S21\",\n    \"S21 Plus\",\n    \"S21 Ultra\",\n    \"Note 20\",\n    \"Note 20 Ultra\"\n]\n\nexport const samsungCategoryList = [\n    \"Phone case\",\n    \"Screen protector\"\n]\n\nexport const naDetailedList = [\n    \"Selfie ring light\",\n    \"Magnetic car mount stand ring\",\n]\n\nexport const naCategoryList = [\n    \"Phone accessories\"\n]\n\nexport const defaultColorList = [\n    \"Azure\",\n    \"Black\",\n    \"Silver\",\n    \"White\",\n    \"Red\",\n    \"Pink\",\n    \"Clear\",\n    \"Blue\",\n    \"Gold\",\n    \"NA\"\n]\n\nexport const defaultDescList = [\n    \"Border\",\n    \"Matt\",\n    \"Ultra thick\",\n    \"Camera cover\",\n    \"Milanese loop\",\n    \"NA\"\n]\n","/Users/hoholyin/Desktop/Personal/rhq/src/requestBuilder.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/Home.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/Loader.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/orderSubmittedPage.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrderPage.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/checkInventoryPage.js",["67"],"import logo from \"../assets/logo_transparent.png\";\nimport InventoryList from \"./InventoryList\";\nimport {apiEndpoint} from \"../common\";\nimport {getRequest} from \"../requestBuilder\";\nimport React, {useEffect, useState} from \"react\";\nimport Loader from \"../Loader\";\nimport \"./checkInventoryPage.css\"\nimport back from \"../assets/back.png\";\nimport refresh from \"../assets/refresh.png\";\n\nconst CheckInventoryPage = (props) => {\n    const [inventoryList, setInventoryList] = useState([]);\n    const [allInventories, setAllInventories] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [query, setQuery] = useState(\"\");\n\n    useEffect(() => {\n        refreshInventory();\n    }, [])\n\n    const search = (searchQuery) => {\n        setQuery(searchQuery)\n        const allWords = searchQuery.split(\" \")\n        const filteredItems = allInventories.filter((e) => {\n            for (const word of allWords) {\n                if (!e.code.toLowerCase().includes(word.toLowerCase())) {\n                    return false\n                }\n            }\n            return true\n        })\n        setInventoryList(filteredItems)\n    }\n\n    const refreshInventory = async () => {\n        setIsLoading(true)\n        const inventoryListObject = await getRequest(apiEndpoint + '/inventory')\n        const allInventories = inventoryListObject.data.allInventories\n        allInventories.map((e) => {\n            e.name = e.code\n            e.name = e.name.replaceAll(\"NA\", \"\")\n            e.name = e.name.replaceAll(\"Phone accessories\", \"\")\n            e.name = e.name.replaceAll(\"Airpods case\", \"\")\n            e.name = e.name.replaceAll(\"Phone case\", \"\")\n            return e\n        })\n        setAllInventories(allInventories)\n        setInventoryList(allInventories)\n        search(query)\n        setIsLoading(false)\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className=\"button-containers\">\n                    <div className=\"back-button-container\" onClick={() => props.navigate(\"\")}>\n                        <img src={back} className=\"back-button interactive\" alt=\"back\"/>\n                    </div>\n                    <div className=\"refresh-button-container\" onClick={refreshInventory}>\n                        <img src={refresh} className=\"refresh-button interactive\" alt=\"refresh\"/>\n                    </div>\n                </div>\n                <div className=\"logo-container interactive\" onClick={() => props.navigate(\"\")}>\n                    <img src={logo} className=\"submit-order-app-logo\" alt=\"logo\"/>\n                </div>\n                <input className=\"input-box\" type=\"text\" onChange={e => search(e.target.value)}/>\n                <div className=\"inventory-list-container\">\n                    {isLoading\n                        ? <Loader />\n                        :<InventoryList inventoryList={inventoryList}/>}\n                </div>\n            </header>\n        </div>\n    )\n}\n\nexport default CheckInventoryPage;\n","/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrderForm.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/InventoryList.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/formComponents.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/addExpensesPage.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/addExpensesForm.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"import React, {useEffect, useState} from \"react\";\nimport {\n    addPrice,\n    apiEndpoint, appleCategoryList, appleDetailedList, defaultColorList, defaultDescList,\n    generateCode, generateNextCashInIndexNumber, generateNextCashInOutIndexNumber,\n    generateNextInvoiceNumber, generateTodayDate,\n    isPrice,\n    itemExists, naCategoryList, naDetailedList, samsungCategoryList, samsungDetailedList,\n    toLocObjectArray,\n    toLocString\n} from \"../common\";\nimport {createRequestOptions, getRequest, postRequest} from \"../requestBuilder\";\nimport tick from \"../assets/tick.png\";\nimport cross from \"../assets/cross.png\";\nimport {radioSelection} from \"./formComponents\";\nimport Loader from \"../Loader\";\nimport \"./addExpensesForm.css\"\n\nconst AddExpensesForm = (props) => {\n    const categoryList = [\n        \"Advertising\",\n        \"Postage & Packaging\",\n        \"Office supplies\",\n        \"Salary\",\n        \"Transport claims\",\n        \"Staff welfare\"\n    ]\n\n    const [category, setCategory] = useState(categoryList[0])\n    const [paidTo, setPaidTo] = useState(\"\")\n    const [invoiceNumber, setInvoiceNumber] = useState(\"-\")\n    const [date, setDate] = useState(generateTodayDate())\n    const [desc, setDesc] = useState(\"\")\n    const [amount, setAmount] = useState(\"$0.00\")\n    const [bossName, setBossName] = useState(\"\")\n\n    const [isStatusMessagesVisible, setStatusMessagesVisible] = useState(false)\n    const [bossCheckCorrect, setBossCheckCorrect] = useState(0)\n    const [updatingAccountsCheckCorrect, setUpdatingAccountsCheckCorrect] = useState(0)\n\n    const indicators = [\n        {\n            indicator: bossCheckCorrect,\n            setter: setBossCheckCorrect\n        },\n        {\n            indicator: updatingAccountsCheckCorrect,\n            setter: setUpdatingAccountsCheckCorrect\n        }\n    ]\n\n    const [submitting, setSubmitting] = useState(false)\n\n    const [isWarningMessageVisible, setWarningMessageVisible] = useState(false)\n    const [warningMessage, setWarningMessage] = useState(\"\")\n\n    const setWarning = (warningMessage) => {\n        setWarningMessage(warningMessage)\n        setWarningMessageVisible(true)\n    }\n\n    const resetWarningMessages = () => {\n        setWarningMessageVisible(false)\n        setWarningMessage(\"\")\n    }\n\n    const resetStatusMessages = () => {\n        setStatusMessagesVisible(false)\n        setBossCheckCorrect(0)\n        setUpdatingAccountsCheckCorrect(0)\n    }\n\n    const updateDate = (date) => {\n        if (date.split(\"/\").length !== 3) {\n            return;\n        }\n        setDate(date)\n    }\n\n    const isBossCorrect = async () => {\n        setBossName(bossName.toUpperCase())\n        const getBossNamesRO = createRequestOptions('GET')\n        const bossNamesPromise = await fetch(apiEndpoint + '/bossNames', getBossNamesRO)\n        const bossNamesResult = await bossNamesPromise.json()\n        const bossNames = bossNamesResult.data.bossNames\n        for (const index in bossNames) {\n            if (bossNames[index].toUpperCase() === bossName.toUpperCase()) {\n                return true\n            }\n        }\n        return false\n    }\n\n    const submitExpense = async () => {\n        try {\n            setStatusMessagesVisible(false)\n            setSubmitting(true)\n            resetWarningMessages()\n            if (!isPrice(amount)) {\n                setWarning(\"Invalid amount!\")\n                setSubmitting(false)\n                return\n            }\n            resetStatusMessages()\n            setStatusMessagesVisible(true)\n\n            const correctBoss = await isBossCorrect()\n            if (!correctBoss) {\n                setBossCheckCorrect(2)\n                setSubmitting(false)\n                return\n            }\n            setBossCheckCorrect(1)\n\n            const expense = {\n                category: category,\n                paid_to: paidTo,\n                invoice_no: invoiceNumber,\n                date: date,\n                description: desc,\n                amount: amount\n            }\n            await postRequest(apiEndpoint + '/expense', expense)\n\n            const lastCceIndexData = await getRequest(apiEndpoint + \"/cce_out\")\n            let lastCashOutIndex = lastCceIndexData.data.lastCashOutIndex\n            if (!lastCashOutIndex.startsWith(\"CO\")) {\n                lastCashOutIndex = \"CO000\"\n            }\n            const lastCashOutRow = lastCceIndexData.data.row\n            const currCashOutIndex = generateNextCashInOutIndexNumber(lastCashOutIndex)\n            const currCashOutRow = parseInt(lastCashOutRow) + 1\n\n            const createLastCashOutObject = {\n                indexNumber: currCashOutIndex,\n                date: date,\n                description: desc,\n                amount: amount,\n                remarks: desc,\n                row: currCashOutRow\n            }\n            await postRequest(apiEndpoint + '/cce_out', createLastCashOutObject)\n            setUpdatingAccountsCheckCorrect(1)\n\n            setSubmitting(false)\n            props.navigate(\"orderSubmitted\")\n        } catch (err) {\n            for (const element in indicators) {\n                if (element.indicator === 0) {\n                    element.setter(2)\n                    break\n                }\n            }\n        }\n    }\n\n    const canSubmit = () => {\n        return category !== \"\"\n            && paidTo !== \"\"\n            && desc !== \"\"\n            && amount !== \"\"\n            && bossName !== \"\"\n            && submitting === false\n    }\n\n    const warningMessageComponent = (warningMessage) => {\n        return (\n            <span className=\"warning-message\">{warningMessage}</span>\n        )\n    }\n\n    const inactiveButton = () => {\n        return (\n            <div className=\"form-button-inactive\">Submit Expense</div>\n        )\n    }\n\n    const activeButton = () => {\n        return (\n            <div className=\"form-button\" onClick={submitExpense}>Submit Expense</div>\n        )\n    }\n\n    const updatePrice = (price, callback) => {\n        if (!price.startsWith(\"$\")) {\n            callback(\"$\")\n            return\n        }\n        callback(price)\n    }\n\n    const statusMessageComponent = () => {\n        return (\n            <div className=\"status-messages-container\">\n                <div className=\"status-message-row\">\n                    <span className=\"status-message\">Boss correct</span>\n                    {bossCheckCorrect === 1 && <img src={tick} className=\"status-icon\" alt=\"logo\"/>}\n                    {bossCheckCorrect === 2 && <img src={cross} className=\"status-icon\" alt=\"logo\"/>}\n                </div>\n                <div className=\"status-message-row\">\n                    <span className=\"status-message\">Updating accounts</span>\n                    {updatingAccountsCheckCorrect === 1 && <img src={tick} className=\"status-icon\" alt=\"logo\"/>}\n                    {updatingAccountsCheckCorrect === 2 && <img src={cross} className=\"status-icon\" alt=\"logo\"/>}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"form\">\n            <span className=\"form-header\">Expense Form</span>\n            <span className=\"form-label\">Category</span>\n            <select name=\"category\" id=\"categories\" onChange={e => setCategory(e.target.value)}>\n                {categoryList.map((item) => {\n                    return (\n                        <option value={item}>{item}</option>\n                    )\n                })}\n            </select>\n            <span className=\"form-label\">Paid To</span>\n            <input className=\"input-box\" type=\"text\" onChange={e => setPaidTo(e.target.value)}/>\n            <span className=\"form-label\">Invoice no (If applicable)</span>\n            <input className=\"input-box\" type=\"text\" value={invoiceNumber} onChange={e => setInvoiceNumber(e.target.value)}/>\n            <span className=\"form-label\">Date</span>\n            <input className=\"input-box\" type=\"text\" value={date} onChange={e => updateDate(e.target.value)}/>\n            <span className=\"form-label\">Description</span>\n            <input className=\"input-box\" type=\"text\" onChange={e => setDesc(e.target.value)}/>\n            <span className=\"form-label\">Amount</span>\n            <input className=\"input-box\" type=\"text\" value={amount} onChange={e => updatePrice(e.target.value, setAmount)}/>\n            <span className=\"form-label\">Boss in-charge</span>\n            <input className=\"input-box\" type=\"text\" onChange={e => setBossName(e.target.value)}/>\n            {isWarningMessageVisible && warningMessageComponent(warningMessage)}\n            {isStatusMessagesVisible && statusMessageComponent()}\n            {canSubmit()\n                ? activeButton()\n                : submitting\n                    ? <Loader />\n                    : inactiveButton()}\n        </div>\n    )\n}\n\nexport default AddExpensesForm;\n",{"ruleId":"85","severity":1,"message":"86","line":1,"column":9,"nodeType":"87","messageId":"88","endLine":1,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":19,"column":8,"nodeType":"91","endLine":19,"endColumn":10,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"93","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"94","line":3,"column":5,"nodeType":"87","messageId":"88","endLine":3,"endColumn":13},{"ruleId":"85","severity":1,"message":"95","line":4,"column":18,"nodeType":"87","messageId":"88","endLine":4,"endColumn":35},{"ruleId":"85","severity":1,"message":"96","line":4,"column":37,"nodeType":"87","messageId":"88","endLine":4,"endColumn":54},{"ruleId":"85","severity":1,"message":"97","line":4,"column":56,"nodeType":"87","messageId":"88","endLine":4,"endColumn":72},{"ruleId":"85","severity":1,"message":"98","line":4,"column":74,"nodeType":"87","messageId":"88","endLine":4,"endColumn":89},{"ruleId":"85","severity":1,"message":"99","line":5,"column":5,"nodeType":"87","messageId":"88","endLine":5,"endColumn":17},{"ruleId":"85","severity":1,"message":"100","line":5,"column":19,"nodeType":"87","messageId":"88","endLine":5,"endColumn":48},{"ruleId":"85","severity":1,"message":"101","line":6,"column":5,"nodeType":"87","messageId":"88","endLine":6,"endColumn":30},{"ruleId":"85","severity":1,"message":"102","line":8,"column":5,"nodeType":"87","messageId":"88","endLine":8,"endColumn":15},{"ruleId":"85","severity":1,"message":"103","line":8,"column":17,"nodeType":"87","messageId":"88","endLine":8,"endColumn":31},{"ruleId":"85","severity":1,"message":"104","line":8,"column":33,"nodeType":"87","messageId":"88","endLine":8,"endColumn":47},{"ruleId":"85","severity":1,"message":"105","line":8,"column":49,"nodeType":"87","messageId":"88","endLine":8,"endColumn":68},{"ruleId":"85","severity":1,"message":"106","line":8,"column":70,"nodeType":"87","messageId":"88","endLine":8,"endColumn":89},{"ruleId":"85","severity":1,"message":"107","line":9,"column":5,"nodeType":"87","messageId":"88","endLine":9,"endColumn":21},{"ruleId":"85","severity":1,"message":"108","line":10,"column":5,"nodeType":"87","messageId":"88","endLine":10,"endColumn":16},{"ruleId":"85","severity":1,"message":"109","line":15,"column":9,"nodeType":"87","messageId":"88","endLine":15,"endColumn":23},"no-unused-vars","'createRequestOptions' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshInventory'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'useEffect' is defined but never used.","'addPrice' is defined but never used.","'appleCategoryList' is defined but never used.","'appleDetailedList' is defined but never used.","'defaultColorList' is defined but never used.","'defaultDescList' is defined but never used.","'generateCode' is defined but never used.","'generateNextCashInIndexNumber' is defined but never used.","'generateNextInvoiceNumber' is defined but never used.","'itemExists' is defined but never used.","'naCategoryList' is defined but never used.","'naDetailedList' is defined but never used.","'samsungCategoryList' is defined but never used.","'samsungDetailedList' is defined but never used.","'toLocObjectArray' is defined but never used.","'toLocString' is defined but never used.","'radioSelection' is defined but never used.",{"desc":"111","fix":"112"},"Update the dependencies array to be: [refreshInventory]",{"range":"113","text":"114"},[701,703],"[refreshInventory]"]