[{"/Users/hoholyin/Desktop/Personal/rhq/src/index.js":"1","/Users/hoholyin/Desktop/Personal/rhq/src/App.js":"2","/Users/hoholyin/Desktop/Personal/rhq/src/reportWebVitals.js":"3","/Users/hoholyin/Desktop/Personal/rhq/src/common.js":"4","/Users/hoholyin/Desktop/Personal/rhq/src/requestBuilder.js":"5","/Users/hoholyin/Desktop/Personal/rhq/src/Home.js":"6","/Users/hoholyin/Desktop/Personal/rhq/src/RHQLoader.js":"7","/Users/hoholyin/Desktop/Personal/rhq/src/mailslip.js":"8","/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrder/orderSubmittedPage.js":"9","/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrder/submitOrderPage.js":"10","/Users/hoholyin/Desktop/Personal/rhq/src/pages/performance/viewPerformance.js":"11","/Users/hoholyin/Desktop/Personal/rhq/src/pages/pendingOrders/pendingOrdersPage.js":"12","/Users/hoholyin/Desktop/Personal/rhq/src/pages/checkInventory/checkInventoryPage.js":"13","/Users/hoholyin/Desktop/Personal/rhq/src/pages/addExpenses/addExpensesPage.js":"14","/Users/hoholyin/Desktop/Personal/rhq/src/pages/addPurchase/addPurchasePage.js":"15","/Users/hoholyin/Desktop/Personal/rhq/src/pages/managePurchase/managePurchasePage.js":"16","/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrder/submitOrderForm.js":"17","/Users/hoholyin/Desktop/Personal/rhq/src/pages/pendingOrders/pendingOrdersList.js":"18","/Users/hoholyin/Desktop/Personal/rhq/src/pages/checkInventory/InventoryList.js":"19","/Users/hoholyin/Desktop/Personal/rhq/src/pages/addPurchase/addPurchaseForm.js":"20","/Users/hoholyin/Desktop/Personal/rhq/src/pages/addExpenses/addExpensesForm.js":"21","/Users/hoholyin/Desktop/Personal/rhq/src/pages/managePurchase/pendingPurchaseList.js":"22"},{"size":442,"mtime":1627027803034,"results":"23","hashOfConfig":"24"},{"size":2486,"mtime":1660184330733,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1626788179110,"results":"26","hashOfConfig":"27"},{"size":179433,"mtime":1659159197953,"results":"28","hashOfConfig":"24"},{"size":889,"mtime":1628694390333,"results":"29","hashOfConfig":"24"},{"size":1535,"mtime":1660184241009,"results":"30","hashOfConfig":"24"},{"size":556,"mtime":1652334142602,"results":"31","hashOfConfig":"24"},{"size":2473,"mtime":1662603958057,"results":"32","hashOfConfig":"24"},{"size":637,"mtime":1660184056968,"results":"33","hashOfConfig":"24"},{"size":815,"mtime":1660184056926,"results":"34","hashOfConfig":"24"},{"size":3707,"mtime":1661586562548,"results":"35","hashOfConfig":"24"},{"size":5190,"mtime":1660184056912,"results":"36","hashOfConfig":"24"},{"size":8154,"mtime":1660184056948,"results":"37","hashOfConfig":"24"},{"size":507,"mtime":1660184056964,"results":"38","hashOfConfig":"24"},{"size":813,"mtime":1660184056958,"results":"39","hashOfConfig":"24"},{"size":5689,"mtime":1660184056980,"results":"40","hashOfConfig":"24"},{"size":18911,"mtime":1663081000288,"results":"41","hashOfConfig":"24"},{"size":2110,"mtime":1660184056920,"results":"42","hashOfConfig":"24"},{"size":1395,"mtime":1660184056895,"results":"43","hashOfConfig":"24"},{"size":17054,"mtime":1663080609156,"results":"44","hashOfConfig":"24"},{"size":7824,"mtime":1660184056954,"results":"45","hashOfConfig":"24"},{"size":1670,"mtime":1660184056941,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"19x70hs",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"enfqkt",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/Users/hoholyin/Desktop/Personal/rhq/src/index.js",[],["94","95"],"/Users/hoholyin/Desktop/Personal/rhq/src/App.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/reportWebVitals.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/common.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/requestBuilder.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/Home.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/RHQLoader.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/mailslip.js",["96"],"import {logoBase64} from \"./common\";\n\nconst { jsPDF } = require(\"jspdf\")\n\nexport const generateMailSlip = (orders) => {\n    if (orders.length === 0) {\n        return\n    }\n    const filename = orders[0].invoice\n    const doc = new jsPDF('l', \"mm\", [190, 105])\n    populateMailSlip(doc, orders[0])\n    orders.shift()\n\n    orders.forEach((order) => {\n        doc.addPage([190, 105], \"l\")\n        populateMailSlip(doc, order)\n    })\n    doc.save(filename + \".pdf\")\n}\n\nconst populateMailSlip = (doc, order) => {\n    doc.addImage(logoBase64, \"png\", 15, 37, 30, 30)\n    doc.setFont('Courier', 'bold')\n    doc.setFontSize(14)\n    doc.text(order.code, 10, 10)\n    doc.setFont('Courier', 'bold')\n    doc.setFontSize(28)\n    const addr = order.addr ? order.addr : \"\"\n    doc.text(\"Mailing Address:\\n\\n\" + formatAddress(addr), 48, 20)\n}\n\nconst formatAddress = (addr) => {\n    addr = addr.replace(\",\", \" \")\n    addr = addr.replaceAll(\"//\", \"\\n\")\n    console.log(addr)\n    let formatted = addr.split(\" \")\n    formatted = formatted.map((e) => {\n        e = e.trim()\n        if (e.includes(\"#\")) {\n            return \"\\n\" + e\n        }\n        if (e.includes(\"-\") && e.charAt(0) !== '#') {\n            return \"\\n#\" + e\n        }\n        if (e.toUpperCase() === \"SINGAPORE\") {\n            return \"\"\n        }\n        if (e.match(/^(\\d{6}|[sS]\\d{6})$/g)) {\n            return \"S(\" + e.match(/\\d{6}/g)[0] + \")\"\n        }\n        if (e.toUpperCase() === \"BLK\" || e.toUpperCase() === \"BLOCK\") {\n            return \"\\n\" + \"Blk\"\n        }\n        if (e.length > 0 && !isNaN(e.charAt(0))) {\n            return e\n        }\n        return e.charAt(0).toUpperCase() + e.slice(1)\n    })\n    formatted = formatted.map((e) => {\n        if (e.includes(\"(\") && e.includes(\")\")) {\n            return \"\\n\" + e\n        }\n        return e\n    })\n    formatted = formatted.join(\" \").trim()\n    // smart indent\n    let lines = formatted.split(\"\\n\")\n    let formattedLines = []\n    lines.forEach((line) => {\n        const words = line.split(\" \")\n        let window = \"\"\n        let next = 0\n        while (next !== -1) {\n            while (next !== -1  && (window + \" \" + words[next]).length < 23) {\n                window += \" \" + words[next]\n                next = next >= words.length - 1 ? -1 : next + 1\n            }\n            formattedLines.push(window.trimLeft())\n            window = \"\"\n        }\n    })\n    formattedLines = formattedLines.filter(l => l !== \"\")\n    return formattedLines.join(\"\\n\")\n}\n","/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrder/orderSubmittedPage.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrder/submitOrderPage.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/performance/viewPerformance.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/pendingOrders/pendingOrdersPage.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/checkInventory/checkInventoryPage.js",["97"],"import logo from \"../../assets/logo_transparent.png\";\nimport InventoryList from \"./InventoryList\";\nimport {apiEndpoint, containsWord, isBossCorrect, matchingSn, updatePrice} from \"../../common\";\nimport {getRequest, postRequest} from \"../../requestBuilder\";\nimport React, {useEffect, useState} from \"react\";\nimport \"./checkInventoryPage.css\"\nimport back from \"../../assets/back.png\";\nimport refresh from \"../../assets/refresh.png\";\nimport cross from \"../../assets/cross.png\";\nimport RHQLoader from \"../../RHQLoader\";\n\nconst CheckInventoryPage = (props) => {\n    const [inventoryList, setInventoryList] = useState([]);\n    const [allInventories, setAllInventories] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [query, setQuery] = useState(\"\");\n    const [selectedCode, setSelectedCode] = useState(\"\")\n    const [selectedSn, setSelectedSn] = useState(\"\")\n    const [indicatorInformation, setIndicatorInformation] = useState([]);\n    const [isLoadingSelection, setIsLoadingSelection] = useState(true);\n    const [sellingPrice, setSellingPrice] = useState(\"$\")\n    const [oldSellingPrice, setOldSellingPrice] = useState(\"$\")\n    const [bossName, setBossName] = useState(\"\")\n    const [submitting, setSubmitting] = useState(false)\n\n    useEffect(() => {\n        refreshInventory();\n    }, [])\n\n    const search = (searchQuery) => {\n        setQuery(searchQuery)\n        if (searchQuery.trim() === \"\") {\n            setInventoryList(allInventories)\n            return\n        }\n        const allWords = searchQuery.split(\" \")\n        console.log(allInventories)\n        const filteredItems = allInventories.filter((e) => {\n            return containsWord(e, allWords) || matchingSn(e, searchQuery)\n        })\n        console.log(filteredItems)\n        setInventoryList(filteredItems)\n    }\n\n    const refreshInventory = async () => {\n        setIsLoading(true)\n        const inventoryListObject = await getRequest(apiEndpoint + '/inventory')\n        const allInventories = inventoryListObject.data.allInventories\n        allInventories.sort((a, b) => a.sn > b.sn)\n        allInventories.map((e) => {\n            e.name = e.code\n            e.name = e.name.replaceAll(\"NA\", \"\")\n            e.name = e.name.replaceAll(\"Phone accessories\", \"\")\n            e.name = e.name.replaceAll(\"Airpods case\", \"\")\n            e.name = e.name.replaceAll(\"Phone case\", \"\")\n            return e\n        })\n        setAllInventories(allInventories)\n        setInventoryList(allInventories)\n        setIsLoading(false)\n    }\n\n    const selectCode = async (code) => {\n        setSelectedCode(\"a\")\n        setIsLoadingSelection(true)\n        const requestObj = {\n            code: code\n        }\n        const sn = allInventories.filter(e => e.code === code)[0].sn\n        setSelectedSn(sn)\n        const allIndicatorsObject = await postRequest(apiEndpoint + '/indicator', requestObj)\n        const allIndicators = allIndicatorsObject.data.allIndicators.map((x) => {\n            return x.replaceAll(/\\s/g, '').length === 0 ? 0 : x;\n        })\n        const allIndicatorObjects = [\n            {\n                name: 'Units Sold',\n                val: allIndicators[0]\n            },\n            {\n                name: 'Stock in Qty Units',\n                val: allIndicators[1]\n            },\n            {\n                name: 'Restock Count',\n                val: allIndicators[2]\n            },\n            {\n                name: 'Margin',\n                val: allIndicators[3]\n            }\n        ];\n        const sellingPriceRequestObj = {\n            code: code\n        }\n        const sellingPriceObj = await postRequest(apiEndpoint + '/getSellingPrice', sellingPriceRequestObj)\n        const sellingPrice = sellingPriceObj.data.sellingPrice\n        setSellingPrice(sellingPrice)\n        setOldSellingPrice(sellingPrice)\n        setIndicatorInformation(allIndicatorObjects)\n        setSelectedCode(code);\n        setIsLoadingSelection(false)\n    }\n\n    const unselectItem = () => {\n        setSelectedCode(\"\")\n    }\n\n    const updateSellingPrice = async () => {\n        setSubmitting(true)\n        const correctBoss = await isBossCorrect(bossName)\n        if (!correctBoss) {\n            setSubmitting(false)\n            return\n        }\n        const dataObject = {\n            code: selectedCode,\n            sellingPrice: sellingPrice\n        }\n        await postRequest(apiEndpoint + \"/setSellingPrice\", dataObject)\n        const sellingPriceRequestObj = {\n            code: selectedCode\n        }\n        const sellingPriceObj = await postRequest(apiEndpoint + '/getSellingPrice', sellingPriceRequestObj)\n        const localSellingPrice = sellingPriceObj.data.sellingPrice\n        setSellingPrice(localSellingPrice)\n        setOldSellingPrice(localSellingPrice)\n        setSubmitting(false)\n    }\n\n    const confirmationContainer = () => {\n        return (\n            <div className=\"confirmation-container\">\n                <span className=\"form-label\">Boss</span>\n                <div className=\"confirmation-input-row\">\n                    <input className=\"input-box\" type=\"text\" onChange={e => setBossName(e.target.value)}/>\n                    {submitting ? <RHQLoader message={\"\"}/> : <div className=\"form-button-confirmation\" onClick={updateSellingPrice}>Update Price</div> }\n                </div>\n            </div>\n        )\n    }\n\n    const selectedCodeModal = () => {\n        return (\n            <div className=\"inv-selected-code-modal\">\n                <span className=\"inv-selected-code-sn\">{selectedSn}</span>\n                <div className=\"inv-selected-code-heading\">\n                    <span className=\"inv-selected-item-name\">{selectedCode}</span>\n                    <div className=\"inv-remove-selection\" onClick={() => unselectItem()}>\n                        <img src={cross} className=\"remove-selection-icon\" alt=\"logo\"/>\n                    </div>\n                </div>\n                <div className=\"indicator-container\">\n                    {indicatorInformation.map((obj) => {\n                        return (\n                            <div className=\"indicator-column\">\n                                <div className=\"indicator-header\">{obj.name}</div>\n                                <div className=\"indicator-value\">{obj.val}</div>\n                            </div>\n                        )\n                    })}\n                </div>\n                <div className=\"selling-price-container\">\n                    <span className=\"selling-price-header\">SELLING PRICE</span>\n                    <input className=\"input-box\" type=\"text\" value={sellingPrice} onChange={e => updatePrice(e.target.value, setSellingPrice)}/>\n                    {sellingPrice !== oldSellingPrice && confirmationContainer()}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"button-containers\">\n                <div className=\"back-button-container\" onClick={() => props.navigate(\"\")}>\n                    <img src={back} className=\"back-button interactive\" alt=\"back\"/>\n                </div>\n                <div className=\"refresh-button-container\" onClick={refreshInventory}>\n                    <img src={refresh} className=\"refresh-button interactive\" alt=\"refresh\"/>\n                </div>\n            </div>\n            <div className=\"logo-container interactive\" onClick={() => props.navigate(\"\")}>\n                <img src={logo} className=\"submit-order-app-logo\" alt=\"logo\"/>\n            </div>\n            {!isLoading && <input className=\"input-box\" type=\"text\" onChange={e => search(e.target.value)}/>}\n            {selectedCode !== \"\"\n                ? isLoadingSelection ? <RHQLoader message={\"Can wait abit anot...\"}/> : selectedCodeModal()\n                : null }\n            <div className=\"inventory-list-container\">\n                {isLoading\n                    ? <RHQLoader message={\"Getting inventory list...\"}/>\n                    : <InventoryList inventoryList={inventoryList} elementOnClick={selectCode} nameOnly={false}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default CheckInventoryPage;\n","/Users/hoholyin/Desktop/Personal/rhq/src/pages/addExpenses/addExpensesPage.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/addPurchase/addPurchasePage.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/managePurchase/managePurchasePage.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/submitOrder/submitOrderForm.js",["98"],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/pendingOrders/pendingOrdersList.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/checkInventory/InventoryList.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/addPurchase/addPurchaseForm.js",["99"],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/addExpenses/addExpensesForm.js",[],"/Users/hoholyin/Desktop/Personal/rhq/src/pages/managePurchase/pendingPurchaseList.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":52,"column":25,"nodeType":"106","messageId":"107","endLine":52,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":16,"column":12,"nodeType":"110","messageId":"111","endLine":16,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":69,"column":8,"nodeType":"114","endLine":69,"endColumn":10,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":321,"column":36,"nodeType":"118","messageId":"119","endLine":321,"endColumn":37,"fix":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'query' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUpOrderForm'. Either include it or remove the dependency array.","ArrayExpression",["123"],"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"124","text":"125"},"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},[13781,13782],"","Update the dependencies array to be: [setUpOrderForm]",{"range":"128","text":"129"},[2698,2700],"[setUpOrderForm]"]