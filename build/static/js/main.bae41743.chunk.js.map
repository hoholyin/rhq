{"version":3,"sources":["requestBuilder.js","assets/logo_transparent.png","Home.js","common.js","formComponents.js","Loader.js","submitOrderForm.js","submitOrderPage.js","orderSubmittedPage.js","App.js","index.js"],"names":["exports","createRequestOptions","reqType","method","headers","body","JSON","stringify","title","Home","props","className","src","logo","alt","onClick","navigate","generateTodayDate","year","Date","getFullYear","toString","month","getMonth","getDate","generateNextInvoiceNumber","lastInvoiceNumber","substring","index","parseInt","currYear","currMonth","length","generateNextCashInIndexNumber","lastCashInIndexNumber","generateCode","category","brand","detailed","color","desc","apiEndpoint","appleDetailedList","appleCategoryList","samsungDetailedList","samsungCategoryList","naDetailedList","naCategoryList","defaultColorList","defaultDescList","radioSelection","selectionName","options","callback","map","option","htmlId","type","name","id","htmlFor","App","height","width","React","Component","SubmitOrderForm","useState","customerName","setCustomerName","setCategory","setBrand","setDetailed","setColor","setDesc","qty","setQty","discount","setDiscount","status","setStatus","remarks","setRemarks","tips","setTips","bossName","setBossName","submitting","setSubmitting","detailedList","setDetailedList","categoryList","setCategoryList","colorList","setColorList","descList","setDescList","warningMessage","setWarningMessage","isWarningMessageVisible","setWarningMessageVisible","checkItemRow","a","code","getItemRowRO","fetch","itemRowPromise","json","itemRowResult","data","row","setWarning","isPrice","price","startsWith","trimmed","includes","pieces","split","err","isBossCorrect","toUpperCase","getBossNamesRO","bossNamesPromise","bossNamesResult","bossNames","submitOrder","test","itemRow","getItemQtyRO","itemQtyPromise","itemQtyResult","itemQty","stockIn","stockOut","updateItemQtyRO","newQty","getOrdersInfoRO","ordersInfoPromise","ordersInfoResult","ordersSize","size","nextOrderRow","currInvoiceNumber","today","order","row_number","customer","invoice_number","invoice_date","createOrderRO","totalAmountPromise","totalAmountResult","totalAmount","tipsObject","tipAmount","addTipsRO","getLastCashInRO","lastCashInPromise","lastCashInResult","lastCashInIndex","currCashInIndex","createLastCashInObject","indexNumber","date","description","amount","createLastCashInRO","updatePrice","onChange","e","target","value","warningMessageComponent","SubmitOrderPage","OrderSubmittedPage","url","window","location","href","getPage","currentPage","setCurrentPage","page","res","setPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bae41743.chunk.js","sourcesContent":["\nexports.createRequestOptions = function (reqType) {\n    if (reqType !== 'GET' && reqType !== 'POST') {\n        return null\n    }\n    return {\n        method: reqType,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ title: reqType + ' request' })\n    }\n}\n\nexports.createRequestOptions = function (reqType, body) {\n    if (reqType !== 'GET' && reqType !== 'POST') {\n        return null\n    }\n    return {\n        method: reqType,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body)\n    }\n}\n","export default __webpack_public_path__ + \"static/media/logo_transparent.0891df4c.png\";","import logo from \"./assets/logo_transparent.png\";\nimport React from \"react\";\n\nconst Home = (props) => {\n    return (\n        <div className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            <div className=\"button\" onClick={() => props.navigate(\"submitOrder\")}>\n                Submit an Order\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","export const generateTodayDate = () => {\n    const year = new Date().getFullYear().toString()\n    const month = (new Date().getMonth() + 1).toString()\n    const day = new Date().getDate().toString()\n    return day + \"/\" + month + \"/\" + year\n}\nexport const generateNextInvoiceNumber = (lastInvoiceNumber) => {\n    const year = lastInvoiceNumber.substring(0, 4)\n    const month = lastInvoiceNumber.substring(4, 6)\n    let index = parseInt(lastInvoiceNumber.substring(6))\n\n    const currYear = new Date().getFullYear().toString()\n    let currMonth = (new Date().getMonth() + 1).toString()\n    if (currMonth.length === 1) {\n        currMonth = \"0\" + currMonth\n    }\n\n    if (year === currYear && month === currMonth) {\n        index += 1\n        index = index.toString()\n        while (index.length < 3) {\n            index = \"0\" + index\n        }\n        return year + month + index\n    }\n    return currYear + currMonth + \"001\"\n}\n\nexport const generateNextCashInIndexNumber = (lastCashInIndexNumber) => {\n    lastCashInIndexNumber += 1\n    lastCashInIndexNumber = lastCashInIndexNumber.toString()\n    while (lastCashInIndexNumber.length < 3) {\n        lastCashInIndexNumber = \"0\" + lastCashInIndexNumber\n    }\n    return \"CI\" + lastCashInIndexNumber\n}\n\nexport const generateCode = (category, brand, detailed, color, desc) => {\n    return category + brand + detailed + color + desc\n}\n\nexport const itemExists = (row) => {\n    return row >= 4\n}\n\nexport const apiEndpoint = \"https://rhq-backend.herokuapp.com/api\"\n\nexport const appleDetailedList = [\n    \"Airpods 1/2\",\n    \"Airpods Pro\",\n    \"12\",\n    \"12/ 12 Pro\",\n    \"12 Pro max\",\n    \"12 Pro\",\n    \"11\",\n    \"11 Pro\",\n    \"11 Pro max\",\n    \"X/XS\"\n]\nexport const appleCategoryList = [\n    \"Phone case\",\n    \"Airpods case\",\n    \"Screen protector\"\n]\n\nexport const samsungDetailedList = [\n    \"S21\",\n    \"S21 Plus\",\n    \"S21 Ultra\",\n    \"Note 20\",\n    \"Note 20 Ultra\"\n]\n\nexport const samsungCategoryList = [\n    \"Phone case\",\n    \"Screen protector\"\n]\n\nexport const naDetailedList = [\n    \"Selfie ring light\",\n    \"Magnetic car mount stand ring\",\n]\n\nexport const naCategoryList = [\n    \"Phone accessories\"\n]\n\nexport const defaultColorList = [\n    \"Azure\",\n    \"Black\",\n    \"White\",\n    \"Red\",\n    \"Pink\",\n    \"Clear\",\n    \"Blue\",\n    \"Gold\",\n    \"NA\"\n]\n\nexport const defaultDescList = [\n    \"Border\",\n    \"Matt\",\n    \"Ultra thick\",\n    \"Camera cover\",\n    \"NA\"\n]\n","import React from \"react\";\nimport \"./submitOrderForm.css\"\n\nexport const radioSelection = (selectionName, options, callback) => {\n    return (\n        <div className=\"radio-row\">\n            {options.map(option => {\n                const htmlId = selectionName + \" \" + option\n                return (\n                    <div className=\"radio-box\" key={option}>\n                        <input type=\"radio\" className=\"radio-button\" name={selectionName} id={htmlId}\n                               onClick={() => callback(option)}/>\n                        <label htmlFor={htmlId} className=\"radio-label\">{option}</label>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport React from \"react\";\nexport default class App extends React.Component {\n    //other logic\n    render() {\n        return (\n            <Loader type=\"Bars\" color=\"#04AA6D\" height={30} width={200} />\n        );\n    }\n}\n","import {\n    apiEndpoint, appleCategoryList,\n    appleDetailedList, defaultColorList, defaultDescList,\n    generateCode, generateNextCashInIndexNumber,\n    generateNextInvoiceNumber,\n    generateTodayDate, itemExists, naCategoryList, naDetailedList, samsungCategoryList,\n    samsungDetailedList\n} from \"./common\";\nimport {createRequestOptions} from \"./requestBuilder\";\nimport React, {useState} from \"react\";\nimport \"./submitOrderForm.css\";\nimport {radioSelection} from \"./formComponents\";\nimport Loader from \"./Loader\";\n\nconst SubmitOrderForm = (props) => {\n    const [customerName, setCustomerName] = useState(\"\");\n    const [category, setCategory] = useState(\"\")\n    const [brand, setBrand] = useState(\"\")\n    const [detailed, setDetailed] = useState(\"\")\n    const [color, setColor] = useState(\"\")\n    const [desc, setDesc] = useState(\"\")\n    const [qty, setQty] = useState(\"1\")\n    const [discount, setDiscount] = useState(\"$0.00\")\n    const [status, setStatus] = useState(\"\")\n    const [remarks, setRemarks] = useState(\"NA\")\n    const [tips, setTips] = useState(\"$0.00\")\n    const [bossName, setBossName] = useState(\"\")\n\n    const [submitting, setSubmitting] = useState(false)\n\n    const [detailedList, setDetailedList] = useState([])\n    const [categoryList, setCategoryList] = useState([])\n    const [colorList, setColorList] = useState([])\n    const [descList, setDescList] = useState([])\n\n    const [warningMessage, setWarningMessage] = useState(\"\")\n    const [isWarningMessageVisible, setWarningMessageVisible] = useState(false)\n\n\n    const checkItemRow = async () => {\n        const code = generateCode(category, brand, detailed, color,desc)\n        const getItemRowRO = createRequestOptions('POST', {code: code})\n        const itemRowPromise = await fetch(apiEndpoint + '/inventoryRow', getItemRowRO)\n        const itemRowResult = await itemRowPromise.json()\n        return itemRowResult.data.row\n    }\n\n    const setWarning = (warningMessage) => {\n        setWarningMessage(warningMessage)\n        setWarningMessageVisible(true)\n    }\n\n    const resetWarningMessages = () => {\n        setWarningMessageVisible(false)\n        setWarningMessage(\"\")\n    }\n\n    const isPrice = (price) => {\n        if (!price.startsWith(\"$\")) {\n            return false\n        }\n        try {\n            const trimmed = price.substring(1)\n            if (trimmed.includes(\".\")) {\n                const pieces = trimmed.split(\".\")\n                if (pieces.length !== 2) {\n                    return false\n                }\n                parseInt(pieces[0])\n                parseInt(pieces[1])\n                return true\n            }\n        } catch (err) {\n            return false\n        }\n    }\n\n    const isBossCorrect = async () => {\n        setBossName(bossName.toUpperCase)\n        const getBossNamesRO = createRequestOptions('GET')\n        const bossNamesPromise = await fetch(apiEndpoint + '/bossNames', getBossNamesRO)\n        const bossNamesResult = await bossNamesPromise.json()\n        const bossNames = bossNamesResult.data.bossNames\n        for (const index in bossNames) {\n           if (bossNames[index].toUpperCase() === bossName.toUpperCase()) {\n               return true\n           }\n        }\n        return false\n    }\n\n    const submitOrder = async () => {\n        setSubmitting(true)\n        resetWarningMessages()\n        if (!/^[1-9]\\d*$/.test(qty)) {\n            setWarning(\"Invalid quantity!\")\n            return\n        }\n\n        setDiscount(discount === \"$\" ? \"$0.00\" : discount)\n        setTips(tips === \"$\" ? \"$0.00\" : tips)\n\n        if (!isPrice(discount)) {\n            setWarning(\"Invalid discount!\")\n            setSubmitting(false)\n            return\n        }\n\n        if (!isPrice(tips)) {\n            setWarning(\"Invalid tips!\")\n            setSubmitting(false)\n            return\n        }\n\n        const correctBoss = await isBossCorrect()\n        if (!correctBoss) {\n            setWarning(\"Invalid boss!\")\n            setSubmitting(false)\n            return\n        }\n\n        const itemRow = await checkItemRow();\n        if (!itemExists(itemRow)) {\n            setWarning(\"Item does not exists\")\n            setSubmitting(false)\n            return\n        }\n\n        const getItemQtyRO = createRequestOptions('POST', {row: itemRow})\n        const itemQtyPromise = await fetch(apiEndpoint + '/inventoryQty', getItemQtyRO)\n        const itemQtyResult = await itemQtyPromise.json()\n        const itemQty = itemQtyResult.data\n        const stockIn = parseInt(itemQty.stockIn)\n        const stockOut = parseInt(itemQty.stockOut)\n        if (stockIn + stockOut <= 0) {\n            setWarning(\"Out of stock for item!\")\n            setSubmitting(false)\n            return\n        }\n        const updateItemQtyRO = createRequestOptions('POST', {row: itemRow, newQty: stockOut - 1})\n        await fetch(apiEndpoint + '/inventoryUpdateQty', updateItemQtyRO)\n\n        const getOrdersInfoRO = createRequestOptions('GET')\n        const ordersInfoPromise = await fetch(apiEndpoint + '/orders', getOrdersInfoRO)\n        const ordersInfoResult = await ordersInfoPromise.json()\n        const ordersSize = parseInt(ordersInfoResult.data.size)\n        const lastInvoiceNumber = ordersInfoResult.data.lastInvoiceNumber\n\n        const nextOrderIndex = ordersSize + 1\n        const nextOrderRow = nextOrderIndex + 1\n\n        const currInvoiceNumber = generateNextInvoiceNumber(lastInvoiceNumber)\n        const today = generateTodayDate()\n\n        const order = {\n            row_number: nextOrderRow,\n            customer: customerName,\n            invoice_number: currInvoiceNumber,\n            invoice_date: today,\n            category: category,\n            brand: brand,\n            detailed: detailed,\n            color: color,\n            desc: desc,\n            qty: qty,\n            discount: discount,\n            status: status,\n            remarks: remarks,\n            tips: tips,\n        }\n        const createOrderRO = createRequestOptions('POST', order)\n        const totalAmountPromise = await fetch(apiEndpoint + '/order', createOrderRO)\n        const totalAmountResult = await totalAmountPromise.json()\n        const totalAmount = totalAmountResult.data.totalAmount\n\n        if (tips !== \"$0.00\") {\n            const tipsObject = {\n                customer: customerName,\n                invoice_number: currInvoiceNumber,\n                tipAmount: tips\n            }\n            const addTipsRO = createRequestOptions('POST', tipsObject)\n            await fetch(apiEndpoint + '/addTips', addTipsRO)\n        }\n\n        const getLastCashInRO = createRequestOptions('GET')\n        const lastCashInPromise = await fetch(apiEndpoint + '/cce', getLastCashInRO)\n        const lastCashInResult = await lastCashInPromise.json()\n        const lastCashInIndex = parseInt(lastCashInResult.data.lastCashInIndex)\n\n        const currCashInIndex = generateNextCashInIndexNumber(lastCashInIndex)\n        const cashInDescription = \"Sales - \" + currInvoiceNumber\n\n        const createLastCashInObject = {\n            indexNumber: currCashInIndex,\n            date: today,\n            description: cashInDescription,\n            amount: totalAmount,\n            remarks: bossName\n        }\n        const createLastCashInRO = createRequestOptions('POST', createLastCashInObject)\n        await fetch(apiEndpoint + '/cce', createLastCashInRO)\n\n        setSubmitting(false)\n        props.navigate(\"orderSubmitted\")\n    }\n\n    const canSubmit = () => {\n        return customerName !== \"\"\n            && brand !== \"\"\n            && category !== \"\"\n            && detailed !== \"\"\n            && color !== \"\"\n            && desc !== \"\"\n            && status !== \"\"\n            && bossName !== \"\"\n            && submitting === false\n    }\n\n    const updateBrand = (brand) => {\n        setCategoryList([\"NA\"])\n        setDetailedList([\"NA\"])\n        setColorList(defaultColorList)\n        setDescList([\"NA\"])\n        switch (brand) {\n            case \"Apple\":\n                setDetailedList(appleDetailedList)\n                setCategoryList(appleCategoryList)\n                break;\n            case \"Samsung\":\n                setDetailedList(samsungDetailedList)\n                setCategoryList(samsungCategoryList)\n                break;\n            case \"NA\":\n                setDetailedList(naDetailedList)\n                setCategoryList(naCategoryList)\n                break;\n            default:\n                break;\n        }\n        setBrand(brand)\n    }\n\n    const updateCategory = (category) => {\n        category === \"Screen protector\" ? setColorList([\"NA\"]) : setColorList(defaultColorList)\n        category === \"Phone case\" ? setDescList(defaultDescList) : setDescList([\"NA\"])\n        setCategory(category)\n    }\n\n    const updatePrice = (price, callback) => {\n        if (!price.startsWith(\"$\")) {\n            callback(\"$\")\n            return\n        }\n        callback(price)\n    }\n\n    const warningMessageComponent = (warningMessage) => {\n        return (\n            <span className=\"warning-message\">{warningMessage}</span>\n        )\n    }\n\n    const inactiveButton = () => {\n       return (\n           <div className=\"form-button-inactive\">Submit Order</div>\n       )\n    }\n\n    const activeButton = () => {\n        return (\n            <div className=\"form-button\" onClick={submitOrder}>Submit Order</div>\n        )\n    }\n\n    return (\n        <div className=\"form\">\n            <span className=\"form-header\">Order Form</span>\n            <span className=\"form-label\">Customer's name</span>\n            <input className=\"input-box\" type=\"text\" onChange={e => setCustomerName(e.target.value)}/>\n            <span className=\"form-label\">Brand</span>\n            {radioSelection(\"brand\", [\"Apple\", \"Samsung\", \"NA\"], updateBrand)}\n            <span className=\"form-label\">Category</span>\n            {radioSelection(\"category\", categoryList, updateCategory)}\n            <span className=\"form-label\">Detailed</span>\n            {radioSelection(\"detailed\", detailedList, setDetailed)}\n            <span className=\"form-label\">Colour</span>\n            {radioSelection(\"color\", colorList, setColor)}\n            <span className=\"form-label\">Description</span>\n            {radioSelection(\"desc\", descList, setDesc)}\n            <span className=\"form-label\">Quantity</span>\n            <input className=\"input-box\" type=\"number\" value={qty} onChange={e => setQty(e.target.value)}/>\n            <span className=\"form-label\">Discount</span>\n            <input className=\"input-box\" type=\"text\" value={discount} onChange={e => updatePrice(e.target.value, setDiscount)}/>\n            <span className=\"form-label\">Status</span>\n            {radioSelection(\"status\", [\"PENDING\", \"PAID\"], setStatus)}\n            <span className=\"form-label\">Remarks</span>\n            <input className=\"input-box\" type=\"text\" value={remarks} onChange={e => setRemarks(e.target.value)}/>\n            <span className=\"form-label\">Tips</span>\n            <input className=\"input-box\" type=\"text\" value={tips} onChange={e => updatePrice(e.target.value, setTips)}/>\n            <span className=\"form-label\">Boss in-charge of Sale</span>\n            <input className=\"input-box\" type=\"text\" onChange={e => setBossName(e.target.value)}/>\n            {isWarningMessageVisible ? warningMessageComponent(warningMessage) : null}\n            {canSubmit()\n                ? activeButton()\n                : submitting\n                    ? <Loader />\n                    : inactiveButton()}\n        </div>\n    )\n}\n\nexport default SubmitOrderForm;\n","import logo from \"./assets/logo_transparent.png\";\nimport React from \"react\";\nimport \"./submitOrderPage.css\"\nimport SubmitOrderForm from \"./submitOrderForm\";\n\nconst SubmitOrderPage = (props) => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div onClick={() => props.navigate(\"\")}>\n                    <img src={logo} className=\"submit-order-app-logo\" alt=\"logo\"/>\n                </div>\n                <SubmitOrderForm navigate={props.navigate}/>\n            </header>\n        </div>\n    );\n}\n\nexport default SubmitOrderPage;\n","import logo from './assets/logo_transparent.png';\nimport './Home.css';\nimport React from \"react\";\nimport \"./orderSubmittedPage.css\";\n\nconst OrderSubmittedPage = (props) => {\n    return (\n        <div className=\"App\">\n            <div className=\"App-header\">\n                <div onClick={() => props.navigate(\"\")}>\n                    <img src={logo} className=\"submit-order-app-logo\" alt=\"logo\"/>\n                </div>\n                <span className=\"submitted-message\">Order submitted!</span>\n                <div onClick={() => props.navigate(\"\")}>\n                    <div className=\"button\">Back to Homepage</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default OrderSubmittedPage;\n","import React, {useState} from \"react\";\nimport Home from \"./Home\";\nimport SubmitOrderPage from \"./submitOrderPage\";\nimport OrderSubmittedPage from \"./orderSubmittedPage\";\n\nfunction App() {\n    const setPage = (page) => {\n        const res = page.split(\"/\");\n        const path = res[res.length - 1]\n        switch (path) {\n            case \"\":\n                return (\n                    <Home navigate={setCurrentPage} />\n                )\n            case \"submitOrder\":\n                return (\n                    <SubmitOrderPage navigate={setCurrentPage}/>\n                )\n            case \"orderSubmitted\":\n                return (\n                    <OrderSubmittedPage navigate={setCurrentPage}/>\n                )\n           default:\n               return (\n                   <Home navigate={setCurrentPage} />\n               )\n        }\n    }\n\n    const getPage = () => {\n        const url = window.location.href.split(\"/\");\n        return url[url.length - 1];\n    }\n\n    const [currentPage, setCurrentPage] = useState(getPage());\n\n    return (\n    <div className=\"App\">\n        {setPage(currentPage)}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}